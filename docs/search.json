[{"path":"https://tkhdyanagi.github.io/latenetwork/articles/latenetwork.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Getting Started with the latenetwork Package","text":"latenetwork package provides tools causal inference noncompliance treatment assignment network interference unknown form. package enables implement instrumental variables (IV) estimation local average treatment effect (LATE) type parameters via inverse probability weighting (IPW) using concept instrumental exposure mapping (IEM) framework approximate neighborhood interference (ANI). parameters interest follows. ADE IV outcome. ADE IV treatment receipt. local average direct effect (LADE). AIE IV outcome. AIE IV treatment receipt. local average indirect effect (LAIE). AOE IV outcome. AOE IV treatment receipt. local average overall effect (LAOE). ASE IV outcome. ASE IV treatment receipt. local average spillover effect (LASE). details identification estimation methods, see “Review Causal Inference Noncompliance Unknown Interference” vignette : vignette(\"review\", package = \"latenetwork\").","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/articles/latenetwork.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Getting Started with the latenetwork Package","text":"Get package CRAN: GitHub:","code":"install.packages(\"latenetwork\") # install.packages(\"devtools\") # if needed devtools::install_github(\"tkhdyanagi/latenetwork\", build_vignettes = TRUE)"},{"path":"https://tkhdyanagi.github.io/latenetwork/articles/latenetwork.html","id":"functions","dir":"Articles","previous_headings":"","what":"Functions","title":"Getting Started with the latenetwork Package","text":"latenetwork package provides following functions: direct(): Estimation statistical inference ADE parameters. indirect(): Estimation statistical inference AIE parameters. overall(): Estimation statistical inference AOE parameters. spillover(): Estimation statistical inference ASE parameters.","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/articles/latenetwork.html","id":"arguments","dir":"Articles","previous_headings":"Functions","what":"Arguments","title":"Getting Started with the latenetwork Package","text":"package functions following arguments: Y: n-dimensional outcome vector. D: n-dimensional binary treatment vector. Set D argument Z like perform intention--treat analysis . Z: n-dimensional binary instrumental vector. S: n-dimensional logical vector indicating whether unit belongs sub-population parameters interest defined. : n times n symmetric binary adjacency matrix whose diagonal elements 0. K: scalar indicating range neighborhood used constructing interference sets. Default 1. bw: scalar bandwidth used HAC estimation wild bootstrap. bw = NULL, rule--thumb bandwidth proposed Leung (2022) used. Default NULL. B: number bootstrap repetitions. B = NULL, wild bootstrap skipped. Default NULL. alp: significance level. Default 0.05. direct() function following additional arguments: IEM: n-dimensional instrumental exposure vector. t = NULL, constant IEM used. Default NULL. t: scalar evaluation point IEM. t = NULL, constant IEM used. Default NULL. spillover() function following additional arguments: IEM: n-dimensional instrumental exposure vector. z: scalar evaluation point IV. t0: scalar evaluation point IEM (). t1: scalar evaluation point IEM ().","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/articles/latenetwork.html","id":"returns","dir":"Articles","previous_headings":"Functions","what":"Returns","title":"Getting Started with the latenetwork Package","text":"function returns data.frame following elements: est: estimate parameter. HAC_SE: standard error computed network HAC estimation. HAC_CI_L: lower bound confidence interval computed network HAC estimation. HAC_CI_U: upper bound confidence interval computed network HAC estimation. wild_SE: standard error computed wild bootstrap. wild_CI_L: lower bound confidence interval computed wild bootstrap. wild_CI_U: upper bound confidence interval computed wild bootstrap. bw: bandwidth used HAC estimation wild bootstrap size: size subpopulation S:","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/articles/latenetwork.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"Getting Started with the latenetwork Package","text":"run following example, install igraph package needed. Generate artificial data datageneration() function. Perform causal inference : can see estimation results :","code":"# if needed -------------------------------------------------------------------- install.packages(\"igraph\") # Generate artificial data from a ring network---------------------------------- set.seed(1) n <- 2000 data <- latenetwork::datageneration(n = n) # Arguments -------------------------------------------------------------------- Y   <- data$Y D   <- data$D Z   <- data$Z A   <- data$A IEM <- ifelse(A %*% Z > 0, 1, 0) S   <- rep(TRUE, n) K   <- 1 z   <- 1 t   <- 0 t0  <- 0 t1  <- 1 bw  <- NULL B   <- NULL alp <- 0.05  # Causal inference -------------------------------------------------------------  # The ADE parameters defined by IEM = (A %*% Z > 0) result_direct1 <- latenetwork::direct(Y = Y,                                       D = D,                                       Z = Z,                                       IEM = IEM,                                       S = S,                                       A = A,                                       K = K,                                       t = t,                                       bw = bw,                                       B = B,                                       alp = alp)  # The ADE parameters defined by the constant IEM result_direct2 <- latenetwork::direct(Y = Y,                                       D = D,                                       Z = Z,                                       IEM = NULL,                                       S = S,                                       A = A,                                       K = K,                                       t = NULL,                                       bw = bw,                                       B = B,                                       alp = alp)  # The AIE parameters defined by K = 1 result_indirect <- latenetwork::indirect(Y = Y,                                          D = D,                                          Z = Z,                                          S = S,                                          A = A,                                          K = K,                                          bw = bw,                                          B = B,                                          alp = alp)  # The AOE parameters defined by K = 1 result_overall <- latenetwork::overall(Y = Y,                                        D = D,                                        Z = Z,                                        S = S,                                        A = A,                                        K = K,                                        bw = bw,                                        B = B,                                        alp = alp)  # The ASE parameters defined by IEM = (A %*% Z > 0) result_spillover <- latenetwork::spillover(Y = Y,                                            D = D,                                            Z = Z,                                            IEM = IEM,                                            S = S,                                            A = A,                                            K = K,                                            z = z,                                            t0 = t0,                                            t1 = t1,                                            bw = bw,                                            B = B,                                            alp = alp) result_direct1 #>            est     HAC_SE  HAC_CI_L  HAC_CI_U wild_SE wild_CI_L wild_CI_U bw #> ADEY 0.4008916 0.09871458 0.2074146 0.5943686      NA        NA        NA  8 #> ADED 0.2499606 0.03485485 0.1816464 0.3182749      NA        NA        NA  8 #> LADE 1.6038190 0.36023112 0.8977789 2.3098590      NA        NA        NA  8 #>      size #> ADEY 2000 #> ADED 2000 #> LADE 2000  result_direct2 #>            est     HAC_SE  HAC_CI_L  HAC_CI_U wild_SE wild_CI_L wild_CI_U bw #> ADEY 0.5632636 0.05254325 0.4602807 0.6662465      NA        NA        NA  8 #> ADED 0.3551812 0.02213500 0.3117974 0.3985650      NA        NA        NA  8 #> LADE 1.5858485 0.12418001 1.3424602 1.8292368      NA        NA        NA  8 #>      size #> ADEY 2000 #> ADED 2000 #> LADE 2000  result_indirect #>            est     HAC_SE  HAC_CI_L  HAC_CI_U wild_SE wild_CI_L wild_CI_U bw #> AIEY 0.2924892 0.08785062 0.1203051 0.4646732      NA        NA        NA  8 #> AIED 0.2897227 0.03205981 0.2268866 0.3525587      NA        NA        NA  8 #> ADED 0.3551812 0.02213500 0.3117974 0.3985650      NA        NA        NA  8 #> LAIE 0.8234928 0.25796895 0.3178830 1.3291027      NA        NA        NA  8 #>      size #> AIEY 2000 #> AIED 2000 #> ADED 2000 #> LAIE 2000  result_overall #>            est     HAC_SE  HAC_CI_L  HAC_CI_U wild_SE wild_CI_L wild_CI_U bw #> AOEY 0.8557528 0.09429867 0.6709308 1.0405748      NA        NA        NA  8 #> AOED 0.6449039 0.03744014 0.5715226 0.7182852      NA        NA        NA  8 #> ADED 0.3551812 0.02213500 0.3117974 0.3985650      NA        NA        NA  8 #> LAOE 2.4093413 0.27637076 1.8676646 2.9510181      NA        NA        NA  8 #>      size #> AOEY 2000 #> AOED 2000 #> ADED 2000 #> LAOE 2000  result_spillover #>            est     HAC_SE  HAC_CI_L  HAC_CI_U wild_SE wild_CI_L wild_CI_U bw #> ASEY 0.5750447 0.08065202 0.4169696 0.7331197      NA        NA        NA  8 #> ASED 0.3920457 0.03401795 0.3253718 0.4587197      NA        NA        NA  8 #> LASE 1.4667795 0.18557907 1.1030512 1.8305078      NA        NA        NA  8 #>      size #> ASEY 2000 #> ASED 2000 #> LASE 2000"},{"path":"https://tkhdyanagi.github.io/latenetwork/articles/latenetwork.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Getting Started with the latenetwork Package","text":"Hoshino, T. Yanagi, T., 2023. Causal inference noncompliance unknown interference. arXiv preprint arXiv:2108.07455. Link Leung, M.P. (2022). Causal inference approximate neighborhood interference. Econometrica, 90(1), pp.267-293. Link","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/articles/review.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Review of Causal Inference with Noncompliance and Unknown Interference","text":"vignette reviews identification estimation methods developed Hoshino Yanagi (2023) “Causal inference noncompliance unknown interference”.","code":""},{"path":[]},{"path":"https://tkhdyanagi.github.io/latenetwork/articles/review.html","id":"variable-definitions","dir":"Articles","previous_headings":"Setup","what":"Variable Definitions","title":"Review of Causal Inference with Noncompliance and Unknown Interference","text":"Consider finite population \\(n\\) units, \\(N_n = \\{ 1, \\dots, n \\}\\). Let \\(A_{ij} \\\\{ 0, 1 \\}\\) indicate whether units \\(\\) \\(j\\) adjacent, , \\(A_{ij} = 1\\) link \\(\\) \\(j\\) \\(A_{ij} = 0\\) otherwise. Assume \\(A_{ij} = A_{ji}\\) \\(,j \\N_n\\) \\(A_{ii} = 0\\) \\(\\N_n\\). unit \\(\\N_n\\), observe: \\(Y_i \\\\mathbb{R}\\): outcome variable. \\(D_i \\\\{ 0, 1 \\}\\): binary treatment. \\(Z_i \\\\{ 0, 1 \\}\\): binary IV. Let: \\(\\mathbf{D} = (D_i)_{\\N_n}\\). \\(\\mathbf{Z} = (Z_i)_{\\N_n}\\). \\(Y_i(\\mathbf{d}, \\mathbf{z})\\): potential outcome unit \\(\\) given \\(\\mathbf{D} = \\mathbf{d}\\) \\(\\mathbf{Z} = \\mathbf{z}\\). \\(D_i(\\mathbf{z})\\): potential treatment status unit \\(\\) given \\(\\mathbf{Z} = \\mathbf{z}\\). \\(\\mathbf{D}(\\mathbf{z}) = (D_i(\\mathbf{z}))_{\\N_n}\\). , can define potential outcome given \\(\\mathbf{Z} = \\mathbf{z}\\) \\[\\begin{align*}   y_i(\\mathbf{z}) = Y_i(\\mathbf{D}(\\mathbf{z}), \\mathbf{z}). \\end{align*}\\] often write potential outcome \\(y_i(Z_j = z_j, \\mathbf{Z}_{-j} = \\mathbf{z}_{-j})\\), \\(\\) may differ \\(j\\). \\(= j\\), simply write \\(y_i(z_i, \\mathbf{z}_{-})\\).","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/articles/review.html","id":"instrumental-exposure","dir":"Articles","previous_headings":"Setup","what":"Instrumental Exposure","title":"Review of Causal Inference with Noncompliance and Unknown Interference","text":"presence network spillover, generally impossible define identifiable causal estimands without introducing restrictions. address issue, consider instrumental exposure \\(T_i\\) \\(\\). example: \\(T_i = \\mathbf{1}\\{ \\sum_{j \\neq } A_{ij} Z_j > 0 \\}\\): Whether least one direct neighbors unit \\(\\) treatment “eligible”. \\(T_i = \\mathbf{1}\\{ \\sum_{j \\neq } A_{ij} D_j > 0 \\}\\): Whether least one direct neighbors unit \\(\\) treated. Assume instrumental exposure \\(T_i\\) \\(\\) determined unit \\(\\)’s \\(K\\)-neighborhood \\(K \\ge 1\\). example, \\(K = 1\\) examples . Denote support instrumental exposure \\(\\mathcal{T}\\). main motivation Hoshino Yanagi (2023) allow possibility user-specified instrumental exposure \\(T_i\\) “incorrect”. See paper details.","code":""},{"path":[]},{"path":"https://tkhdyanagi.github.io/latenetwork/articles/review.html","id":"average-direct-effect-ade","dir":"Articles","previous_headings":"Intention-to-treat Estimands","what":"Average Direct Effect (ADE)","title":"Review of Causal Inference with Noncompliance and Unknown Interference","text":"Consider sub-population \\(S_n \\subseteq N_n\\). example, can consider set units whose degrees \\(\\delta \\ge 1\\): \\[\\begin{align*}   S_n(\\delta) = \\left\\{ \\N_n : \\sum_{j \\neq } A_{ij} = \\delta \\right\\}. \\end{align*}\\] \\(z \\\\{ 0, 1 \\}\\) \\(t \\\\mathcal{T}\\), let \\[\\begin{align*}   \\mu_i^Y(z, t) = \\mathbb{E}[ Y_i \\mid Z_i = z, T_i = t ],   \\qquad   \\mu_i^D(z, t) = \\mathbb{E}[ D_i \\mid Z_i = z, T_i = t ], \\end{align*}\\] \\[\\begin{align*}   \\bar \\mu_{S_n}^Y(z, t) = \\frac{1}{|S_n|} \\sum_{\\S_n} \\mu_i^Y(z, t),   \\qquad   \\bar \\mu_{S_n}^D(z, t) = \\frac{1}{|S_n|} \\sum_{\\S_n} \\mu_i^D(z, t), \\end{align*}\\] \\(|S_n|\\) denotes cardinality \\(S_n\\). ADE IV outcome treatment receipt defined \\[\\begin{align*}   \\mathrm{ADEY}_{S_n}(t) = \\bar \\mu_{S_n}^Y(1, t) - \\bar \\mu_{S_n}^Y(0, t),   \\qquad   \\mathrm{ADED}_{S_n}(t) = \\bar \\mu_{S_n}^D(1, t) - \\bar \\mu_{S_n}^D(0, t). \\end{align*}\\] estimands help us understand average effect unit’s IV unit’s outcome unit’s treatment. rule possibility t = NULL. t = NULL, simply write \\(\\mathrm{ADEY}_{S_n}\\) \\(\\mathrm{ADED}_{S_n}\\), , \\[\\begin{align*}   \\mathrm{ADEY}_{S_n} = \\bar \\mu_{S_n}^Y(1) - \\bar \\mu_{S_n}^Y(0),   \\qquad   \\mathrm{ADED}_{S_n} = \\bar \\mu_{S_n}^D(1) - \\bar \\mu_{S_n}^D(0), \\end{align*}\\] \\[\\begin{align*}   \\bar \\mu_{S_n}^Y(z) = \\frac{1}{|S_n|} \\sum_{\\S_n} \\mu_i^Y(z),   \\qquad   \\bar \\mu_{S_n}^D(z) = \\frac{1}{|S_n|} \\sum_{\\S_n} \\mu_i^D(z) \\end{align*}\\] \\(\\mu_i^Y(z) = \\mathbb{E}[ Y_i \\mid Z_i = z ]\\) \\(\\mu_i^D(z) = \\mathbb{E}[ D_i \\mid Z_i = z ]\\).","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/articles/review.html","id":"average-indirect-effect-aie","dir":"Articles","previous_headings":"Intention-to-treat Estimands","what":"Average Indirect Effect (AIE)","title":"Review of Causal Inference with Noncompliance and Unknown Interference","text":"\\(z \\\\{ 0, 1 \\}\\), let \\[\\begin{align*}   \\mu_{ji}^Y(z) = \\mathbb{E}[ Y_j \\mid Z_i = z ],   \\qquad   \\mu_{ji}^D(z) = \\mathbb{E}[ D_j \\mid Z_i = z ], \\end{align*}\\] \\[\\begin{align*}   \\bar \\mu_{S_n}^Y(z; \\mathcal{E}) = \\frac{1}{|S_n|} \\sum_{\\S_n} \\sum_{j \\\\mathcal{E}_i} \\mu_{ji}^Y(z),   \\qquad   \\bar \\mu_{S_n}^D(z; \\mathcal{E}) = \\frac{1}{|S_n|} \\sum_{\\S_n} \\sum_{j \\\\mathcal{E}_i} \\mu_{ji}^D(z), \\end{align*}\\] \\(\\mathcal{E}_i\\) denotes set units \\(j \\neq \\) belong unit \\(\\)’s \\(K\\)-neighborhood. AIE IV outcome treatment receipt defined \\[\\begin{align*}   \\mathrm{AIEY}_{S_n} = \\bar \\mu_{S_n}^Y(1; \\mathcal{E}) - \\bar \\mu_{S_n}^Y(0; \\mathcal{E}),   \\qquad   \\mathrm{AIED}_{S_n} = \\bar \\mu_{S_n}^D(1; \\mathcal{E}) - \\bar \\mu_{S_n}^D(0; \\mathcal{E}). \\end{align*}\\] estimands helpful understanding average effect unit’s IV sum outcomes others sum treatments others.","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/articles/review.html","id":"average-overall-effect-aoe","dir":"Articles","previous_headings":"Intention-to-treat Estimands","what":"Average Overall Effect (AOE)","title":"Review of Causal Inference with Noncompliance and Unknown Interference","text":"AOE IV outcome treatment receipt defined \\[\\begin{align*}   \\mathrm{AOEY}_{S_n} = \\mathrm{ADEY}_{S_n} + \\mathrm{AIEY}_{S_n},   \\qquad   \\mathrm{AOED}_{S_n} = \\mathrm{ADED}_{S_n} + \\mathrm{AIED}_{S_n}. \\end{align*}\\] estimands useful understanding average effect unit’s IV sum unit’s outcome outcomes others sum unit’s treatment treatments others.","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/articles/review.html","id":"average-spillover-effect-ase","dir":"Articles","previous_headings":"Intention-to-treat Estimands","what":"Average Spillover Effect (ASE)","title":"Review of Causal Inference with Noncompliance and Unknown Interference","text":"\\(z \\\\{ 0, 1 \\}\\) \\(t \\neq t'\\), ASE instrumental exposure outcome treatment receipt defined \\[\\begin{align*}   \\mathrm{ASEY}_{S_n}(z, t, t') = \\bar \\mu_{S_n}^Y(z, t) - \\bar \\mu_{S_n}^Y(z, t'),   \\qquad   \\mathrm{ASED}_{S_n}(z, t, t') = \\bar \\mu_{S_n}^D(z, t) - \\bar \\mu_{S_n}^D(z, t'). \\end{align*}\\] pre-specified instrumental exposure \\(T_i\\) “correct” (cf. Hoshino Yanagi, 2023), estimands allow us understand average spillover effect caused changing instrumental values others outcome treatment receipt. However, pre-specified instrumental exposure \\(T_i\\) “incorrect”, estimands generally sensible causal interpretation. Accordingly, cautious interpreting empirical results obtained ASE parameters.","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/articles/review.html","id":"local-average-treatment-effect-type-parameters","dir":"Articles","previous_headings":"","what":"Local Average Treatment Effect Type Parameters","title":"Review of Causal Inference with Noncompliance and Unknown Interference","text":"ITT parameters may underestimate effect treatment receipt outcome. address issue, Hoshino Yanagi (2023) extend notion compliers local average treatment effect (LATE) type parameters current setting.","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/articles/review.html","id":"local-average-direct-effect-lade","dir":"Articles","previous_headings":"Local Average Treatment Effect Type Parameters","what":"Local Average Direct Effect (LADE)","title":"Review of Causal Inference with Noncompliance and Unknown Interference","text":"Let \\(\\mathcal{C}_i(\\mathbf{z}_{-}) = \\mathbf{1}\\{ D_i(1, \\mathbf{z}_{-}) = 1, D_i(0, \\mathbf{z}_{-}) = 0 \\}\\) indicate compliance status unit \\(\\) given \\(\\mathbf{Z}_{-} = \\mathbf{z}_{-}\\). LADE defined \\[\\begin{align*}   \\mathrm{LADE}_{S_n}(t)   = \\sum_{\\S_n} \\sum_{\\mathbf{z}_{-} \\\\{ 0, 1 \\}^{n-1}} \\{ y_i(1, \\mathbf{z}_{-}) - y_i(0, \\mathbf{z}_{-}) \\} \\frac{ \\mathcal{C}_i(\\mathbf{z}_{-}) \\pi_i(\\mathbf{z}_{-}, t) }{ \\sum_{\\S_n} \\sum_{\\mathbf{z}_{-} \\\\{ 0, 1 \\}^{n-1}} \\mathcal{C}_i(\\mathbf{z}_{-}) \\pi_i(\\mathbf{z}_{-}, t) }, \\end{align*}\\] \\(\\pi_i(\\mathbf{z}_{-}, t) = \\Pr[ \\mathbf{Z}_{-} = \\mathbf{z}_{-} \\mid T_i = t ]\\). useful understanding average effect unit’s treatment unit’s outcome compliers. t = NULL, LADE reduces \\[\\begin{align*}   \\mathrm{LADE}_{S_n}   = \\sum_{\\S_n} \\sum_{\\mathbf{z}_{-} \\\\{ 0, 1 \\}^{n-1}} \\{ y_i(1, \\mathbf{z}_{-}) - y_i(0, \\mathbf{z}_{-}) \\} \\frac{ \\mathcal{C}_i(\\mathbf{z}_{-}) \\pi_i(\\mathbf{z}_{-}) }{ \\sum_{\\S_n} \\sum_{\\mathbf{z}_{-} \\\\{ 0, 1 \\}^{n-1}} \\mathcal{C}_i(\\mathbf{z}_{-}) \\pi_i(\\mathbf{z}_{-}) }, \\end{align*}\\] \\(\\pi_i(\\mathbf{z}_{-}) = \\Pr[ \\mathbf{Z}_{-} = \\mathbf{z}_{-} ]\\). shown LADE identifiable Wald type estimand: \\[\\begin{align*}   \\mathrm{LADE}_{S_n}(t)   = \\frac{ \\mathrm{ADEY}_{S_n}(t) }{ \\mathrm{ADED}_{S_n}(t) } \\end{align*}\\]","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/articles/review.html","id":"local-average-indirect-effect-laie","dir":"Articles","previous_headings":"Local Average Treatment Effect Type Parameters","what":"Local Average Indirect Effect (LAIE)","title":"Review of Causal Inference with Noncompliance and Unknown Interference","text":"LAIE defined \\[\\begin{align*}   \\mathrm{LAIE}_{S_n}   = \\sum_{\\S_n} \\sum_{\\mathbf{z}_{-} \\\\{ 0, 1 \\}^{n-1}} \\sum_{j \\\\mathcal{E}_i} \\{ y_j(Z_i = 1, \\mathbf{Z}_{-} = \\mathbf{z}_{-}) - y_j(Z_i = 0, \\mathbf{Z}_{-} = \\mathbf{z}_{-}) \\} \\frac{ \\mathcal{C}_i(\\mathbf{z}_{-}) \\pi_i(\\mathbf{z}_{-}) }{ \\sum_{\\S_n} \\sum_{\\mathbf{z}_{-} \\\\{ 0, 1 \\}^{n-1}} \\mathcal{C}_i(\\mathbf{z}_{-}) \\pi_i(\\mathbf{z}_{-}) }. \\end{align*}\\] parameter helps us understand average effect complier’s treatment sum outcomes others. shown LAIE identifiable Wald type estimand: \\[\\begin{align*}   \\mathrm{LAIE}_{S_n}   = \\frac{ \\mathrm{AIEY}_{S_n} }{ \\mathrm{ADED}_{S_n} }. \\end{align*}\\] Note denominator \\(\\mathrm{ADED}_{S_n}\\), \\(\\mathrm{AIED}_{S_n}\\).","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/articles/review.html","id":"local-average-overall-effect-laoe","dir":"Articles","previous_headings":"Local Average Treatment Effect Type Parameters","what":"Local Average Overall Effect (LAOE)","title":"Review of Causal Inference with Noncompliance and Unknown Interference","text":"LAOE defined \\[\\begin{align*}   \\mathrm{LAOE}_{S_n}   = \\mathrm{LADE}_{S_n} + \\mathrm{LAIE}_{S_n}. \\end{align*}\\] LAOE informative average effect compiler’s treatment sum compiler’s outcome outcomes others. trivial identification results LADE LAIE parameters LAOE identified \\[\\begin{align*}   \\mathrm{LAOE}_{S_n}   = \\frac{ \\mathrm{AOEY}_{S_n} }{ \\mathrm{ADED}_{S_n} }. \\end{align*}\\]","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/articles/review.html","id":"local-average-spillover-effect-lase","dir":"Articles","previous_headings":"Local Average Treatment Effect Type Parameters","what":"Local Average Spillover Effect (LASE)","title":"Review of Causal Inference with Noncompliance and Unknown Interference","text":"discussed , ASE parameters admit meaningful causal interpretation pre-specified instrumental exposure “incorrect”. reason, define LASE parameter, assume pre-specified instrumental exposure “correct” potential outcome potential treatment status given \\(Z_i = z\\) \\(T_i = t\\) well-defined. Denote variables \\(\\tilde y_i(z, t)\\) \\(\\tilde d_i(z, t)\\). Letting \\(\\tilde{\\mathcal{C}}_i(z, t, t') = \\mathbf{1}\\{ \\tilde d_i(z, t) = 1, \\tilde d_i(z, t') = 0 \\}\\), LASE defined \\[\\begin{align*}   \\mathrm{LASE}_{S_n}(z, t, t')   = \\sum_{\\S_n} \\{ \\tilde y_i(z, t) - \\tilde y_i(z, t') \\} \\frac{ \\tilde{\\mathcal{C}}_i(z, t, t') }{ \\sum_{\\S_n} \\tilde{\\mathcal{C}}_i(z, t, t') }. \\end{align*}\\] Note LASE longer well-defined pre-specified \\(T_i\\) “incorrect”. shown LASE identifiable Wald type estimand: \\[\\begin{align*}   \\mathrm{LASE}_{S_n}(z, t, t')   = \\frac{ \\mathrm{ASEY}_{S_n}(z, t, t') }{ \\mathrm{ASED}_{S_n}(z, t, t') }. \\end{align*}\\]","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/articles/review.html","id":"estimation","dir":"Articles","previous_headings":"","what":"Estimation","title":"Review of Causal Inference with Noncompliance and Unknown Interference","text":"can estimate \\(\\bar \\mu_{S_n}^Y(z, t)\\) \\(\\bar \\mu_{S_n}^D(z, t)\\) \\[\\begin{align*}   \\widehat \\mu_{S_n}^Y(z, t) & = \\frac{1}{|S_n|} \\sum_{\\S_n} \\frac{Y_i \\cdot \\mathbf{1}\\{ Z_i = z, T_i = t \\}}{\\widehat p_{S_n}(z, t)}, \\\\   \\widehat \\mu_{S_n}^D(z, t) & = \\frac{1}{|S_n|} \\sum_{\\S_n} \\frac{D_i \\cdot \\mathbf{1}\\{ Z_i = z, T_i = t \\}}{\\widehat p_{S_n}(z, t)}, \\end{align*}\\] \\[\\begin{align*}   \\widehat p_{S_n}(z, t)   = \\frac{1}{|S_n|} \\sum_{\\S_n} \\mathbf{1}\\{ Z_i = z, T_i = t \\}. \\end{align*}\\] Similarly, \\(\\bar \\mu_{S_n}^Y(z; \\mathcal{E})\\) \\(\\bar \\mu_{S_n}^D(z; \\mathcal{E})\\) can estimated \\[\\begin{align*}   \\widehat \\mu_{S_n}^Y(z; \\mathcal{E}) & = \\frac{1}{|S_n|} \\sum_{\\S_n} \\sum_{j \\\\mathcal{E}_i} \\frac{Y_j \\cdot \\mathbf{1}\\{ Z_i = z \\}}{\\widehat p_{S_n}(z)}, \\\\   \\bar \\mu_{S_n}^D(z; \\mathcal{E}) & = \\frac{1}{|S_n|} \\sum_{\\S_n} \\sum_{j \\\\mathcal{E}_i} \\frac{D_j \\cdot \\mathbf{1}\\{ Z_i = z \\}}{\\widehat p_{S_n}(z)}, \\end{align*}\\] \\[\\begin{align*}   \\widehat p_{S_n}(z)   = \\frac{1}{|S_n|} \\sum_{\\S_n} \\mathbf{1}\\{ Z_i = z \\}. \\end{align*}\\] can estimate ADE parameters \\[\\begin{align*}   \\widehat{\\mathrm{ADEY}}_{S_n}(t) & = \\widehat \\mu_{S_n}^Y(1, t) - \\widehat \\mu_{S_n}^Y(0, t), \\\\   \\widehat{\\mathrm{ADED}}_{S_n}(t) & = \\widehat \\mu_{S_n}^D(1, t) - \\widehat \\mu_{S_n}^D(0, t), \\\\   \\widehat{\\mathrm{LADE}}_{S_n}(t) & = \\frac{ \\widehat{\\mathrm{ADEY}}_{S_n}(t) }{ \\widehat{\\mathrm{ADED}}_{S_n}(t) }. \\end{align*}\\] AIE parameters can estimated \\[\\begin{align*}     \\widehat{\\mathrm{AIEY}}_{S_n} & = \\widehat \\mu_{S_n}^Y(1; \\mathcal{E}) - \\widehat \\mu_{S_n}^Y(0; \\mathcal{E}), \\\\     \\widehat{\\mathrm{AIED}}_{S_n} & = \\widehat \\mu_{S_n}^D(1; \\mathcal{E}) - \\widehat \\mu_{S_n}^D(0; \\mathcal{E}), \\\\     \\widehat{\\mathrm{LAIE}}_{S_n} & = \\frac{ \\widehat{\\mathrm{AIEY}}_{S_n} }{ \\widehat{\\mathrm{ADED}}_{S_n} }. \\end{align*}\\] AOE estimators given \\[\\begin{align*}     \\widehat{\\mathrm{AOEY}}_{S_n} & = \\widehat{\\mathrm{ADEY}}_{S_n} + \\widehat{\\mathrm{AIEY}}_{S_n}, \\\\     \\widehat{\\mathrm{AOED}}_{S_n} & = \\widehat{\\mathrm{ADED}}_{S_n} + \\widehat{\\mathrm{AIED}}_{S_n}, \\\\     \\widehat{\\mathrm{LAOE}}_{S_n} & = \\widehat{\\mathrm{LADE}}_{S_n} + \\widehat{\\mathrm{LAIE}}_{S_n}. \\end{align*}\\] ASE estimators \\[\\begin{align*}   \\widehat{\\mathrm{ASEY}}_{S_n}(z, t, t') & = \\widehat \\mu_{S_n}^Y(z, t) - \\widehat \\mu_{S_n}^Y(z, t'), \\\\   \\widehat{\\mathrm{ASED}}_{S_n}(z, t, t') & = \\widehat \\mu_{S_n}^D(z, t) - \\widehat \\mu_{S_n}^D(z, t'), \\\\   \\widehat{\\mathrm{LASE}}_{S_n}(z, t, t') & = \\frac{ \\widehat{\\mathrm{ASEY}}_{S_n}(z, t, t') }{ \\widehat{\\mathrm{ASED}}_{S_n}(z, t, t') }. \\end{align*}\\]","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/articles/review.html","id":"statistical-inference","dir":"Articles","previous_headings":"","what":"Statistical Inference","title":"Review of Causal Inference with Noncompliance and Unknown Interference","text":"proposed estimators consistent asymptotically normally distributed assumption approximate neighborhood interference (ANI) certain restriction denseness network structure. Given result, can perform statistical inference causal parameters based network HAC estimation wild bootstrap approach. details, see Hoshino Yanagi (2023).","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/articles/review.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Review of Causal Inference with Noncompliance and Unknown Interference","text":"Hoshino, T. Yanagi, T., 2023. Causal inference noncompliance unknown interference. arXiv preprint arXiv:2108.07455. Link","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tadao Hoshino. Author, copyright holder. Takahide Yanagi. Author, maintainer, copyright holder.","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hoshino T, Yanagi T (2023). latenetwork: Inference LATEs Network Interference Unknown Form. R package version 1.0.1, https://tkhdyanagi.github.io/latenetwork/.","code":"@Manual{,   title = {latenetwork: Inference on LATEs under Network Interference of Unknown Form},   author = {Tadao Hoshino and Takahide Yanagi},   year = {2023},   note = {R package version 1.0.1},   url = {https://tkhdyanagi.github.io/latenetwork/}, }"},{"path":"https://tkhdyanagi.github.io/latenetwork/index.html","id":"latenetwork-inference-on-lates-under-network-interference-of-unknown-form","dir":"","previous_headings":"","what":"Inference on LATEs under Network Interference of Unknown Form","title":"Inference on LATEs under Network Interference of Unknown Form","text":"latenetwork package provides tools causal inference noncompliance treatment assignment network interference unknown form. package enables implement instrumental variables (IV) estimation local average treatment effect (LATE) type parameters via inverse probability weighting (IPW) using concept instrumental exposure mapping (IEM) framework approximate neighborhood interference (ANI). details, see Hoshino Yanagi (2023) “Causal inference noncompliance unknown interference”.","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Inference on LATEs under Network Interference of Unknown Form","text":"Get package CRAN: GitHub:","code":"install.packages(\"latenetwork\") # install.packages(\"devtools\") # if needed devtools::install_github(\"tkhdyanagi/latenetwork\", build_vignettes = TRUE)"},{"path":"https://tkhdyanagi.github.io/latenetwork/index.html","id":"vignettes","dir":"","previous_headings":"","what":"Vignettes","title":"Inference on LATEs under Network Interference of Unknown Form","text":"details, see package vignettes :","code":"library(\"latenetwork\")  # Getting Started with the latenetwork Package vignette(\"latenetwork\")  # Review of Causal Inference with Noncompliance and Unknown Interference vignette(\"review\", package = \"latenetwork\")"},{"path":"https://tkhdyanagi.github.io/latenetwork/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Inference on LATEs under Network Interference of Unknown Form","text":"Hoshino, T. Yanagi, T., 2023. Causal inference noncompliance unknown interference. arXiv preprint arXiv:2108.07455. Link","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 latenetwork authors","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/reference/datageneration.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Artificial Data by Simulation — datageneration","title":"Generate Artificial Data by Simulation — datageneration","text":"datageneration() function generates artificial ring-network data simulation. function used package vignette.","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/reference/datageneration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Artificial Data by Simulation — datageneration","text":"","code":"datageneration(n)"},{"path":"https://tkhdyanagi.github.io/latenetwork/reference/datageneration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Artificial Data by Simulation — datageneration","text":"n sample size","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/reference/datageneration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Artificial Data by Simulation — datageneration","text":"list containing outcome vector, treatment vector, instrumental vector, true instrumental exposure vector, symmetric binary adjacency matrix.","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/reference/datageneration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Artificial Data by Simulation — datageneration","text":"","code":"latenetwork::datageneration(n = 2000) #> $Y #>                 [,1] #>    [1,]  1.719294769 #>    [2,]  0.366555167 #>    [3,]  1.760633735 #>    [4,]  2.020494821 #>    [5,]  0.557952629 #>    [6,]  1.610780154 #>    [7,]  0.669049815 #>    [8,]  4.980589709 #>    [9,]  2.296725974 #>   [10,]  1.813914135 #>   [11,]  2.606039626 #>   [12,] -0.207230870 #>   [13,]  1.223510642 #>   [14,]  0.398026425 #>   [15,]  1.043435284 #>   [16,]  3.012503425 #>   [17,]  1.068200271 #>   [18,]  2.028747340 #>   [19,]  1.961867489 #>   [20,]  2.044339817 #>   [21,]  1.408820831 #>   [22,]  0.583127385 #>   [23,]  1.611189800 #>   [24,] -0.028356647 #>   [25,]  0.393444912 #>   [26,]  0.101532565 #>   [27,]  1.347962735 #>   [28,]  1.258586994 #>   [29,]  3.880263508 #>   [30,] -0.081216285 #>   [31,]  0.818831127 #>   [32,]  1.103432690 #>   [33,]  1.064583061 #>   [34,]  2.696293520 #>   [35,]  3.461503944 #>   [36,]  1.184352988 #>   [37,]  1.381601568 #>   [38,]  1.443662954 #>   [39,]  1.714310433 #>   [40,]  0.487345767 #>   [41,]  1.249651921 #>   [42,]  1.889766808 #>   [43,]  1.451030294 #>   [44,]  2.083611644 #>   [45,] -0.592762809 #>   [46,]  0.944667661 #>   [47,]  1.354766421 #>   [48,]  1.478576044 #>   [49,]  0.933631508 #>   [50,] -1.199883065 #>   [51,]  3.894966151 #>   [52,]  1.819531661 #>   [53,]  0.480350232 #>   [54,]  3.761162784 #>   [55,]  0.140475025 #>   [56,]  3.163774935 #>   [57,]  1.722421871 #>   [58,]  0.134817132 #>   [59,]  0.970866065 #>   [60,]  0.545576825 #>   [61,]  0.744337977 #>   [62,]  1.653941754 #>   [63,]  1.588262707 #>   [64,]  0.018525847 #>   [65,] -0.006331673 #>   [66,]  3.298474447 #>   [67,]  1.023685199 #>   [68,]  2.135168737 #>   [69,]  1.341563651 #>   [70,]  0.964391068 #>   [71,]  1.285929304 #>   [72,]  1.449846594 #>   [73,] -0.247038114 #>   [74,]  1.993831706 #>   [75,]  2.906003277 #>   [76,]  0.356170001 #>   [77,]  2.939325000 #>   [78,]  1.396487779 #>   [79,] -0.233105301 #>   [80,]  2.872422487 #>   [81,]  2.982374946 #>   [82,]  3.923090620 #>   [83,]  2.967516151 #>   [84,]  0.332436010 #>   [85,]  0.977000700 #>   [86,]  1.894088572 #>   [87,]  2.774054894 #>   [88,]  2.679905897 #>   [89,]  1.008236733 #>   [90,]  2.566864966 #>   [91,]  0.719963492 #>   [92,]  2.095885342 #>   [93,]  0.186560778 #>   [94,]  2.278064296 #>   [95,]  0.659637700 #>   [96,]  2.023420520 #>   [97,]  1.655818728 #>   [98,]  4.353191715 #>   [99,]  1.389084479 #>  [100,]  2.680922988 #>  [101,]  0.972676791 #>  [102,]  0.725698079 #>  [103,]  2.356676760 #>  [104,]  3.536390861 #>  [105,]  3.464864540 #>  [106,]  4.420745335 #>  [107,]  2.598087252 #>  [108,]  3.886129016 #>  [109,]  3.892549679 #>  [110,]  0.401437534 #>  [111,]  0.584215834 #>  [112,]  1.851897736 #>  [113,]  0.124005623 #>  [114,] -0.858163001 #>  [115,]  2.699813801 #>  [116,]  3.133319841 #>  [117,]  4.302813653 #>  [118,]  3.093037555 #>  [119,]  6.134034938 #>  [120,]  3.169429479 #>  [121,]  1.651703288 #>  [122,]  1.714972796 #>  [123,]  2.085627888 #>  [124,]  2.534439609 #>  [125,]  3.608915598 #>  [126,]  1.474421396 #>  [127,]  2.400838308 #>  [128,]  1.272438221 #>  [129,]  3.371540874 #>  [130,] -0.979561318 #>  [131,]  2.746817891 #>  [132,]  1.972321259 #>  [133,]  1.348211759 #>  [134,]  0.636865504 #>  [135,]  3.167282670 #>  [136,]  0.982090854 #>  [137,]  0.526219396 #>  [138,]  0.862791372 #>  [139,]  0.473790002 #>  [140,]  0.119231924 #>  [141,]  2.198593934 #>  [142,]  1.770663970 #>  [143,]  0.819824159 #>  [144,]  0.829277289 #>  [145,]  0.391949318 #>  [146,]  2.683096936 #>  [147,]  1.047370163 #>  [148,]  0.014434856 #>  [149,]  2.725688863 #>  [150,]  2.480253290 #>  [151,]  2.180256953 #>  [152,]  2.280484186 #>  [153,]  3.325180732 #>  [154,]  4.893665225 #>  [155,]  2.122032932 #>  [156,]  3.162555408 #>  [157,]  0.497245151 #>  [158,]  2.609276454 #>  [159,]  1.062517185 #>  [160,]  2.500615484 #>  [161,]  3.079593874 #>  [162,]  4.533256925 #>  [163,]  0.585344911 #>  [164,]  4.318618273 #>  [165,]  2.839295633 #>  [166,]  2.172220115 #>  [167,]  1.168774326 #>  [168,]  5.092723994 #>  [169,]  1.653984769 #>  [170,]  1.218898993 #>  [171,]  0.258091684 #>  [172,]  2.028868311 #>  [173,]  0.707463401 #>  [174,]  2.895218320 #>  [175,]  1.289513105 #>  [176,]  2.803341631 #>  [177,]  2.098443078 #>  [178,]  0.719764889 #>  [179,]  1.457033015 #>  [180,]  2.181317491 #>  [181,]  3.541136333 #>  [182,]  0.695679311 #>  [183,]  1.048481183 #>  [184,]  2.377519556 #>  [185,]  1.759249647 #>  [186,] -0.332302085 #>  [187,]  0.006683715 #>  [188,]  3.205575468 #>  [189,] -0.102443735 #>  [190,]  0.617024698 #>  [191,]  1.898051620 #>  [192,]  2.981270186 #>  [193,]  4.110783243 #>  [194,]  1.772038527 #>  [195,]  4.311877153 #>  [196,]  2.694990523 #>  [197,]  1.177091123 #>  [198,]  2.412393795 #>  [199,]  1.043999126 #>  [200,]  3.873425233 #>  [201,] -0.485819176 #>  [202,] -0.066599671 #>  [203,]  0.929467541 #>  [204,]  4.355600679 #>  [205,]  3.014129121 #>  [206,]  4.075764042 #>  [207,]  1.652870602 #>  [208,]  2.149175914 #>  [209,]  1.288866618 #>  [210,]  3.104216354 #>  [211,]  0.701877703 #>  [212,]  2.444307343 #>  [213,]  2.134459296 #>  [214,] -0.856106381 #>  [215,]  1.344882721 #>  [216,]  1.338797606 #>  [217,]  1.482160823 #>  [218,]  0.147846751 #>  [219,]  0.033094331 #>  [220,]  0.646083619 #>  [221,]  1.832262960 #>  [222,]  1.985214185 #>  [223,]  0.725582786 #>  [224,]  2.226983177 #>  [225,]  1.657348732 #>  [226,]  2.546422027 #>  [227,] -1.484176679 #>  [228,]  2.455097273 #>  [229,]  2.356914210 #>  [230,]  0.640880151 #>  [231,]  1.232361169 #>  [232,]  1.311770563 #>  [233,]  2.536497404 #>  [234,]  3.758180542 #>  [235,]  2.617838371 #>  [236,]  0.567214982 #>  [237,] -0.015334473 #>  [238,]  2.366461404 #>  [239,]  2.032654566 #>  [240,]  4.025507462 #>  [241,]  3.678679652 #>  [242,]  0.090905303 #>  [243,]  0.318284516 #>  [244,]  1.408338746 #>  [245,]  1.000150904 #>  [246,]  2.061949113 #>  [247,]  1.551571553 #>  [248,]  1.680987044 #>  [249,]  2.253910925 #>  [250,]  1.182450435 #>  [251,]  4.000439868 #>  [252,]  3.153793849 #>  [253,]  1.309636025 #>  [254,]  1.790062443 #>  [255,]  2.147360585 #>  [256,]  0.982974786 #>  [257,]  1.535207828 #>  [258,]  2.129021785 #>  [259,]  0.053441014 #>  [260,]  1.142407536 #>  [261,]  1.564502882 #>  [262,]  0.186069981 #>  [263,]  1.366616634 #>  [264,]  1.583930641 #>  [265,] -0.773409434 #>  [266,]  1.419411343 #>  [267,]  0.756233180 #>  [268,]  1.528508027 #>  [269,]  3.530444254 #>  [270,]  1.621432971 #>  [271,]  2.691906477 #>  [272,]  1.179871314 #>  [273,]  2.463947397 #>  [274,]  0.581058251 #>  [275,]  1.648140177 #>  [276,]  1.775093494 #>  [277,]  0.470854883 #>  [278,]  1.684995664 #>  [279,]  2.161048324 #>  [280,]  4.091091678 #>  [281,]  0.600337828 #>  [282,]  0.145444740 #>  [283,]  1.624332975 #>  [284,]  1.170582994 #>  [285,]  2.745603001 #>  [286,]  1.079396640 #>  [287,]  1.064938380 #>  [288,] -1.575181394 #>  [289,]  1.168805630 #>  [290,]  1.668883036 #>  [291,] -0.718350281 #>  [292,]  0.765433110 #>  [293,]  2.036921290 #>  [294,] -0.148420306 #>  [295,]  1.809574868 #>  [296,] -1.183303568 #>  [297,]  1.903654928 #>  [298,]  3.430702458 #>  [299,]  3.000748945 #>  [300,]  0.412291073 #>  [301,] -0.182652809 #>  [302,] -1.741549110 #>  [303,]  1.851837273 #>  [304,]  0.662859939 #>  [305,]  1.239614815 #>  [306,]  0.587897796 #>  [307,] -0.356793122 #>  [308,]  2.909433464 #>  [309,] -0.514312054 #>  [310,]  1.701375227 #>  [311,]  3.173757831 #>  [312,]  0.442141189 #>  [313,]  3.438985641 #>  [314,]  0.212171344 #>  [315,]  4.407466876 #>  [316,]  0.651126044 #>  [317,]  0.474696727 #>  [318,]  3.044439090 #>  [319,]  2.070672379 #>  [320,]  1.971316195 #>  [321,]  1.410866618 #>  [322,]  1.971530054 #>  [323,]  2.108231414 #>  [324,]  3.620651056 #>  [325,]  1.160618662 #>  [326,]  0.513468653 #>  [327,]  1.769489779 #>  [328,]  1.496890984 #>  [329,]  1.395314843 #>  [330,]  0.682911261 #>  [331,]  3.856135843 #>  [332,]  0.313583259 #>  [333,] -0.360994090 #>  [334,]  2.355046791 #>  [335,]  2.381384499 #>  [336,]  4.517295739 #>  [337,] -0.692720207 #>  [338,]  1.363984306 #>  [339,]  0.574543690 #>  [340,]  2.851472525 #>  [341,]  2.459300858 #>  [342,]  0.432157966 #>  [343,]  1.127744762 #>  [344,]  2.155760971 #>  [345,]  1.519591240 #>  [346,]  3.527714112 #>  [347,]  1.044299257 #>  [348,]  0.144890626 #>  [349,]  2.106680046 #>  [350,]  2.299902614 #>  [351,] -0.029171389 #>  [352,] -0.101390128 #>  [353,]  2.996523117 #>  [354,]  1.492940628 #>  [355,]  3.288863710 #>  [356,]  2.581679794 #>  [357,]  0.295806035 #>  [358,] -0.199047112 #>  [359,]  0.740080002 #>  [360,]  2.791483596 #>  [361,]  1.669086936 #>  [362,]  1.154458186 #>  [363,]  2.061384531 #>  [364,]  3.148951167 #>  [365,]  1.516097910 #>  [366,]  1.558587245 #>  [367,]  1.284297244 #>  [368,]  2.649564997 #>  [369,]  2.971336741 #>  [370,]  2.734613046 #>  [371,]  2.210225348 #>  [372,] -0.232554208 #>  [373,]  2.537570340 #>  [374,] -0.624657235 #>  [375,]  1.294104830 #>  [376,]  0.888580539 #>  [377,]  2.064945777 #>  [378,]  0.783932998 #>  [379,]  1.943414498 #>  [380,] -1.492313244 #>  [381,]  2.580792108 #>  [382,]  2.871541547 #>  [383,]  1.323979368 #>  [384,]  2.992823152 #>  [385,]  2.216638618 #>  [386,] -1.131967648 #>  [387,]  1.235550649 #>  [388,]  1.489431929 #>  [389,]  0.670578064 #>  [390,]  4.526631990 #>  [391,]  3.982195187 #>  [392,]  0.190800214 #>  [393,]  0.832665719 #>  [394,]  4.074936380 #>  [395,] -0.344027052 #>  [396,]  1.513854056 #>  [397,] -1.784102583 #>  [398,]  0.601001920 #>  [399,]  1.153133047 #>  [400,]  1.423614221 #>  [401,]  0.484637588 #>  [402,]  1.661788864 #>  [403,]  2.099278424 #>  [404,]  2.044308757 #>  [405,]  1.462075531 #>  [406,]  2.522461445 #>  [407,]  2.866169717 #>  [408,]  2.330146708 #>  [409,]  0.978602112 #>  [410,]  0.050944417 #>  [411,]  1.038722458 #>  [412,]  3.039744949 #>  [413,]  2.571643602 #>  [414,]  0.607798409 #>  [415,]  1.025658432 #>  [416,]  1.879275583 #>  [417,]  1.728118878 #>  [418,]  1.854278334 #>  [419,]  2.069005098 #>  [420,]  1.916636070 #>  [421,] -1.392589164 #>  [422,]  0.142199137 #>  [423,] -0.152580370 #>  [424,]  2.073029498 #>  [425,]  2.598201465 #>  [426,]  3.271474151 #>  [427,]  1.702755197 #>  [428,]  3.012882015 #>  [429,]  2.647523702 #>  [430,]  0.053909545 #>  [431,]  0.740336946 #>  [432,]  0.309974905 #>  [433,]  0.171265459 #>  [434,]  0.687244123 #>  [435,]  1.365484198 #>  [436,]  4.214887403 #>  [437,]  3.159088983 #>  [438,]  2.151795201 #>  [439,]  2.427656624 #>  [440,]  3.224918051 #>  [441,]  0.523409717 #>  [442,]  1.270247301 #>  [443,]  3.511302766 #>  [444,]  1.830413365 #>  [445,]  1.258517526 #>  [446,]  2.057829900 #>  [447,]  0.988021968 #>  [448,] -0.335520239 #>  [449,] -0.350791267 #>  [450,]  2.144230138 #>  [451,]  0.755334503 #>  [452,]  0.703642556 #>  [453,]  0.787415606 #>  [454,]  0.320700271 #>  [455,]  0.926960445 #>  [456,]  2.563996234 #>  [457,]  0.777340771 #>  [458,]  2.195728266 #>  [459,]  1.909116998 #>  [460,]  0.858253732 #>  [461,]  3.890473253 #>  [462,]  2.102186564 #>  [463,]  1.716513394 #>  [464,]  2.208375828 #>  [465,]  1.599530321 #>  [466,]  0.851737920 #>  [467,]  1.017198434 #>  [468,]  1.157921364 #>  [469,]  1.934001135 #>  [470,]  2.127887591 #>  [471,]  2.821508424 #>  [472,]  0.636525167 #>  [473,]  1.281167904 #>  [474,]  0.888742604 #>  [475,]  4.878225827 #>  [476,]  0.027229448 #>  [477,]  2.595084003 #>  [478,]  3.548854620 #>  [479,]  2.856305621 #>  [480,]  3.624741794 #>  [481,]  3.482971752 #>  [482,]  1.686852550 #>  [483,]  3.379528106 #>  [484,]  1.315533528 #>  [485,]  2.140444506 #>  [486,]  3.070059017 #>  [487,]  2.562190056 #>  [488,]  1.761420954 #>  [489,]  3.546367952 #>  [490,]  3.102745802 #>  [491,]  2.450829590 #>  [492,]  0.450410991 #>  [493,]  0.714885207 #>  [494,] -0.120772599 #>  [495,]  0.693480044 #>  [496,]  0.356678463 #>  [497,]  0.758896597 #>  [498,]  1.844123624 #>  [499,]  2.562787607 #>  [500,]  0.850427656 #>  [501,]  3.349974322 #>  [502,]  2.117650928 #>  [503,]  2.021478331 #>  [504,]  0.708957051 #>  [505,] -0.720944969 #>  [506,]  0.963593617 #>  [507,]  1.468056183 #>  [508,]  0.579435766 #>  [509,]  0.462929745 #>  [510,] -0.798789259 #>  [511,]  1.183931896 #>  [512,]  1.873723044 #>  [513,]  1.070297373 #>  [514,]  0.948181983 #>  [515,]  1.327626523 #>  [516,]  3.300173752 #>  [517,]  0.459392716 #>  [518,]  1.415310359 #>  [519,]  1.346851346 #>  [520,]  1.115022132 #>  [521,]  2.623299176 #>  [522,]  1.047253810 #>  [523,] -0.663027782 #>  [524,]  2.659030288 #>  [525,]  0.653895418 #>  [526,]  1.753313125 #>  [527,]  3.307311032 #>  [528,]  1.056666698 #>  [529,]  3.711964098 #>  [530,]  1.111218551 #>  [531,]  1.755447123 #>  [532,]  2.201917293 #>  [533,]  2.529314082 #>  [534,]  4.609511185 #>  [535,]  1.023149372 #>  [536,] -0.698605507 #>  [537,]  2.793366557 #>  [538,]  0.723655157 #>  [539,]  3.391759310 #>  [540,]  0.031724735 #>  [541,] -0.690380361 #>  [542,]  1.848762527 #>  [543,]  0.622091586 #>  [544,]  3.072151767 #>  [545,]  2.709524783 #>  [546,]  1.410885738 #>  [547,] -0.793163565 #>  [548,]  2.221602359 #>  [549,]  2.805493374 #>  [550,]  1.703023756 #>  [551,]  1.231673748 #>  [552,]  1.789264653 #>  [553,]  1.044050368 #>  [554,] -1.026150117 #>  [555,]  2.247264569 #>  [556,]  1.268639357 #>  [557,]  2.628685721 #>  [558,]  2.033758571 #>  [559,]  2.581485664 #>  [560,]  2.600254501 #>  [561,]  1.271963871 #>  [562,]  0.094812554 #>  [563,]  1.105720468 #>  [564,]  1.942871493 #>  [565,]  2.889115763 #>  [566,]  0.978585203 #>  [567,]  1.758367112 #>  [568,]  0.504777424 #>  [569,]  1.011416639 #>  [570,]  1.751181812 #>  [571,]  0.901857837 #>  [572,]  1.467956754 #>  [573,]  4.466834889 #>  [574,]  0.687285284 #>  [575,]  1.165482529 #>  [576,]  2.782421016 #>  [577,]  3.076343329 #>  [578,]  1.125528356 #>  [579,]  5.371741690 #>  [580,]  5.618929241 #>  [581,]  0.726335141 #>  [582,]  1.343479111 #>  [583,]  3.113491396 #>  [584,]  1.026463806 #>  [585,]  1.665711277 #>  [586,]  1.819837924 #>  [587,]  0.852164364 #>  [588,]  1.628487217 #>  [589,]  1.908618598 #>  [590,]  0.500809332 #>  [591,]  0.705615540 #>  [592,]  1.466426743 #>  [593,]  2.115797239 #>  [594,] -0.510322551 #>  [595,]  0.518937955 #>  [596,]  2.457375133 #>  [597,]  2.305443085 #>  [598,]  0.317406656 #>  [599,] -0.041739258 #>  [600,]  1.897378616 #>  [601,]  2.483145244 #>  [602,]  2.688983146 #>  [603,]  2.160131265 #>  [604,] -0.356955690 #>  [605,] -0.216143624 #>  [606,]  3.441273702 #>  [607,]  2.092376022 #>  [608,] -0.078392308 #>  [609,]  2.840826487 #>  [610,]  0.550510717 #>  [611,]  2.474320348 #>  [612,]  2.637660296 #>  [613,]  3.262007759 #>  [614,]  2.795587153 #>  [615,]  3.308914344 #>  [616,]  1.803244494 #>  [617,]  3.825836594 #>  [618,]  2.511195961 #>  [619,]  0.783035616 #>  [620,]  1.037933355 #>  [621,]  2.825586670 #>  [622,]  1.672764100 #>  [623,]  1.852417684 #>  [624,]  0.114506049 #>  [625,]  0.111898041 #>  [626,]  1.633260265 #>  [627,]  1.002406777 #>  [628,]  0.958156106 #>  [629,]  0.453255125 #>  [630,]  1.728728548 #>  [631,]  2.066188221 #>  [632,]  2.558836905 #>  [633,]  2.359944395 #>  [634,]  2.426809722 #>  [635,]  2.337713418 #>  [636,]  0.335299579 #>  [637,]  3.784786159 #>  [638,]  3.158288664 #>  [639,]  3.494252165 #>  [640,]  0.761737210 #>  [641,]  1.897604772 #>  [642,] -0.475162430 #>  [643,]  1.255023995 #>  [644,]  1.658656174 #>  [645,] -0.243334245 #>  [646,]  3.370386782 #>  [647,]  1.925678142 #>  [648,] -0.420096309 #>  [649,]  1.503917361 #>  [650,]  0.719977969 #>  [651,]  2.068602390 #>  [652,]  2.840898475 #>  [653,]  1.768938681 #>  [654,]  3.224736728 #>  [655,]  2.488247608 #>  [656,]  0.778681681 #>  [657,]  2.123508732 #>  [658,]  1.518140957 #>  [659,]  0.276595352 #>  [660,]  4.229687977 #>  [661,]  3.110306123 #>  [662,]  0.204289164 #>  [663,]  3.405456327 #>  [664,]  2.127377216 #>  [665,]  1.619027890 #>  [666,]  0.596868676 #>  [667,]  0.976060237 #>  [668,]  3.315680084 #>  [669,]  1.042166031 #>  [670,]  1.801872729 #>  [671,]  1.108602865 #>  [672,]  3.471378129 #>  [673,]  3.167900379 #>  [674,] -0.141204729 #>  [675,]  0.607461061 #>  [676,]  2.756197625 #>  [677,]  0.849939741 #>  [678,]  0.542280798 #>  [679,]  0.120701722 #>  [680,]  0.596463898 #>  [681,] -0.789945268 #>  [682,]  1.715816554 #>  [683,] -0.153167884 #>  [684,]  1.040660314 #>  [685,] -0.539053473 #>  [686,]  0.074588908 #>  [687,]  0.260811937 #>  [688,]  1.874224396 #>  [689,]  1.888776076 #>  [690,] -0.074007102 #>  [691,]  1.384906233 #>  [692,]  1.057676458 #>  [693,]  1.245927033 #>  [694,]  0.579245627 #>  [695,]  2.238624600 #>  [696,]  0.281500951 #>  [697,]  1.262975388 #>  [698,]  1.409468021 #>  [699,]  1.244967552 #>  [700,]  2.587130316 #>  [701,]  0.146525738 #>  [702,]  2.766011889 #>  [703,]  1.542182010 #>  [704,]  1.617846729 #>  [705,]  2.726849910 #>  [706,]  2.861235710 #>  [707,]  0.124496661 #>  [708,]  2.422296154 #>  [709,]  0.657756731 #>  [710,]  2.072370924 #>  [711,]  1.500488557 #>  [712,]  1.985980777 #>  [713,]  1.681788189 #>  [714,]  4.113114685 #>  [715,]  1.058781724 #>  [716,]  2.095478307 #>  [717,]  2.318630358 #>  [718,] -0.558645568 #>  [719,]  3.811418562 #>  [720,]  0.738277141 #>  [721,]  2.558090075 #>  [722,]  3.344675019 #>  [723,]  1.019294100 #>  [724,]  1.844056356 #>  [725,]  0.306675933 #>  [726,]  1.686458617 #>  [727,]  2.550334739 #>  [728,] -0.291049990 #>  [729,]  0.414754845 #>  [730,]  1.023217090 #>  [731,]  1.254464198 #>  [732,]  3.866075030 #>  [733,]  3.998505361 #>  [734,]  1.019908385 #>  [735,]  1.843593377 #>  [736,] -0.177959909 #>  [737,]  2.013975458 #>  [738,]  1.187625345 #>  [739,]  1.849846364 #>  [740,]  1.794170329 #>  [741,] -1.539168462 #>  [742,]  0.118551831 #>  [743,]  4.670203976 #>  [744,]  0.885556512 #>  [745,]  2.082274262 #>  [746,]  2.006924349 #>  [747,]  2.162179388 #>  [748,]  2.827516595 #>  [749,]  1.048836299 #>  [750,]  0.817035350 #>  [751,]  2.065494245 #>  [752,]  3.201713145 #>  [753,] -0.390028700 #>  [754,]  2.880573010 #>  [755,]  0.941952690 #>  [756,]  1.441507401 #>  [757,]  3.193204999 #>  [758,] -1.331077946 #>  [759,]  0.170752340 #>  [760,]  1.043175122 #>  [761,]  1.444121325 #>  [762,]  1.622350112 #>  [763,]  2.618152079 #>  [764,]  3.014154205 #>  [765,]  0.230339389 #>  [766,]  0.061731161 #>  [767,]  1.464025240 #>  [768,]  1.945555901 #>  [769,]  0.890577860 #>  [770,]  0.599370411 #>  [771,]  0.829919883 #>  [772,]  4.642783295 #>  [773,]  0.713488856 #>  [774,] -0.885609891 #>  [775,]  1.221119119 #>  [776,]  1.663678613 #>  [777,]  2.143822860 #>  [778,]  3.468128751 #>  [779,] -0.843941991 #>  [780,]  0.813128829 #>  [781,]  3.093288944 #>  [782,]  3.445489349 #>  [783,]  1.498302386 #>  [784,]  1.519713398 #>  [785,]  3.302092877 #>  [786,]  3.066054848 #>  [787,]  1.927067896 #>  [788,]  2.511842185 #>  [789,]  1.129851157 #>  [790,]  1.696854835 #>  [791,]  1.997794190 #>  [792,]  0.352145841 #>  [793,]  1.057365988 #>  [794,]  3.459002286 #>  [795,]  0.374948136 #>  [796,]  0.568010469 #>  [797,]  2.278418607 #>  [798,]  2.556664098 #>  [799,] -0.138426188 #>  [800,]  2.530198883 #>  [801,] -0.144242983 #>  [802,]  1.279744907 #>  [803,]  1.767577264 #>  [804,]  2.546612775 #>  [805,]  1.585148610 #>  [806,]  1.201896504 #>  [807,]  3.375382972 #>  [808,]  1.162263271 #>  [809,]  3.716601658 #>  [810,]  1.989062469 #>  [811,]  0.801768210 #>  [812,]  1.347273062 #>  [813,]  3.730020704 #>  [814,]  3.725668113 #>  [815,]  0.981267888 #>  [816,]  2.512678402 #>  [817,]  2.631291725 #>  [818,]  0.662742452 #>  [819,]  4.052819112 #>  [820,]  1.335936939 #>  [821,]  1.362616063 #>  [822,]  1.862070547 #>  [823,]  1.187002433 #>  [824,]  0.168867557 #>  [825,]  3.631851187 #>  [826,]  4.232510799 #>  [827,]  2.161475595 #>  [828,]  1.414219435 #>  [829,]  4.378462285 #>  [830,]  1.076215968 #>  [831,]  0.436721290 #>  [832,]  2.789707177 #>  [833,]  1.760595614 #>  [834,]  0.639534280 #>  [835,]  2.831792338 #>  [836,]  0.952481470 #>  [837,]  1.661224756 #>  [838,]  0.163147998 #>  [839,] -0.432970366 #>  [840,]  0.123839954 #>  [841,]  1.887185465 #>  [842,]  0.653368075 #>  [843,]  2.088448015 #>  [844,]  0.260630630 #>  [845,]  1.487836365 #>  [846,]  1.025754783 #>  [847,]  1.420857761 #>  [848,]  0.652030388 #>  [849,]  2.368965548 #>  [850,]  1.220467246 #>  [851,]  1.326296592 #>  [852,]  1.446352876 #>  [853,]  1.672019929 #>  [854,] -0.868474849 #>  [855,]  1.470258019 #>  [856,]  0.237856261 #>  [857,]  2.873582177 #>  [858,]  1.904866963 #>  [859,]  3.916929774 #>  [860,]  5.277892721 #>  [861,]  1.798352256 #>  [862,]  0.347260702 #>  [863,]  2.913562861 #>  [864,]  2.012628306 #>  [865,]  1.266051615 #>  [866,]  1.987263136 #>  [867,]  2.052220645 #>  [868,]  0.636515389 #>  [869,]  0.708747357 #>  [870,]  2.584952936 #>  [871,] -0.337230706 #>  [872,]  1.436379881 #>  [873,] -0.190878882 #>  [874,]  0.595905674 #>  [875,]  0.595591779 #>  [876,]  0.987147479 #>  [877,]  1.044546384 #>  [878,]  0.744790697 #>  [879,]  0.361072265 #>  [880,]  1.598983551 #>  [881,]  2.167602082 #>  [882,] -0.867738198 #>  [883,]  0.745441181 #>  [884,]  2.826830479 #>  [885,]  0.313660100 #>  [886,]  1.554044989 #>  [887,]  2.500051250 #>  [888,]  0.910774802 #>  [889,]  5.414704292 #>  [890,]  2.931016865 #>  [891,]  3.508485866 #>  [892,]  0.757738641 #>  [893,]  1.370055221 #>  [894,]  2.988509432 #>  [895,]  1.341430080 #>  [896,]  0.972034716 #>  [897,]  1.926624101 #>  [898,]  2.300542119 #>  [899,]  1.166250579 #>  [900,]  1.883772409 #>  [901,]  1.861081642 #>  [902,]  1.539670895 #>  [903,]  1.379258449 #>  [904,]  3.723965009 #>  [905,]  1.900438847 #>  [906,]  1.761016015 #>  [907,]  3.486235892 #>  [908,]  2.578200870 #>  [909,]  0.025928737 #>  [910,]  0.298955419 #>  [911,]  2.823096067 #>  [912,]  3.812134968 #>  [913,]  0.585069999 #>  [914,]  0.518558150 #>  [915,]  1.302098044 #>  [916,] -0.504199844 #>  [917,]  3.984902368 #>  [918,]  2.239212063 #>  [919,] -0.098879512 #>  [920,]  0.264923706 #>  [921,]  0.985011668 #>  [922,]  2.898561045 #>  [923,]  1.223560290 #>  [924,]  1.684045193 #>  [925,]  2.256687465 #>  [926,]  1.025379810 #>  [927,]  0.515891247 #>  [928,]  2.535632930 #>  [929,]  2.920061611 #>  [930,]  1.840922193 #>  [931,] -0.121668853 #>  [932,]  0.436868144 #>  [933,]  1.928296624 #>  [934,]  1.987467833 #>  [935,]  1.997451870 #>  [936,]  0.777442299 #>  [937,]  2.303192768 #>  [938,]  0.461918744 #>  [939,]  1.076349491 #>  [940,]  2.697780111 #>  [941,]  0.923672013 #>  [942,]  1.075575934 #>  [943,]  0.956196479 #>  [944,]  1.378481671 #>  [945,]  1.591761772 #>  [946,]  0.580620053 #>  [947,]  3.257411913 #>  [948,]  3.030131321 #>  [949,]  4.305531711 #>  [950,]  2.151877105 #>  [951,]  0.128906108 #>  [952,]  2.391990667 #>  [953,]  1.243174026 #>  [954,]  5.434872232 #>  [955,] -0.322639601 #>  [956,]  0.568124116 #>  [957,]  0.138271974 #>  [958,]  0.986540901 #>  [959,]  2.011678774 #>  [960,]  1.681790356 #>  [961,]  1.996579262 #>  [962,]  1.203438760 #>  [963,]  2.996195425 #>  [964,]  0.665726661 #>  [965,]  0.659173966 #>  [966,]  1.655027318 #>  [967,]  1.433050396 #>  [968,]  2.346127634 #>  [969,]  1.367813313 #>  [970,]  1.302318564 #>  [971,]  1.775666660 #>  [972,]  3.115622580 #>  [973,]  0.212249645 #>  [974,]  1.518753211 #>  [975,]  3.418722591 #>  [976,]  1.028489334 #>  [977,]  1.036896747 #>  [978,]  0.760499367 #>  [979,]  1.542887512 #>  [980,]  2.545091039 #>  [981,]  0.275858410 #>  [982,]  0.458348113 #>  [983,]  3.254523791 #>  [984,]  0.624192957 #>  [985,]  0.938005161 #>  [986,]  0.155399994 #>  [987,]  2.371967146 #>  [988,] -0.737266155 #>  [989,]  0.922401589 #>  [990,]  1.201806941 #>  [991,]  2.306980574 #>  [992,]  0.041352351 #>  [993,]  2.782527551 #>  [994,]  3.205003192 #>  [995,]  0.745098849 #>  [996,]  2.888266429 #>  [997,]  0.912383037 #>  [998,]  0.888417087 #>  [999,]  1.482068022 #> [1000,] -0.151345967 #>  [ reached getOption(\"max.print\") -- omitted 1000 rows ] #>  #> $D #>         [,1] #>    [1,]    1 #>    [2,]    0 #>    [3,]    1 #>    [4,]    0 #>    [5,]    1 #>    [6,]    1 #>    [7,]    0 #>    [8,]    1 #>    [9,]    1 #>   [10,]    1 #>   [11,]    0 #>   [12,]    0 #>   [13,]    0 #>   [14,]    0 #>   [15,]    1 #>   [16,]    1 #>   [17,]    0 #>   [18,]    1 #>   [19,]    1 #>   [20,]    1 #>   [21,]    1 #>   [22,]    0 #>   [23,]    0 #>   [24,]    0 #>   [25,]    0 #>   [26,]    0 #>   [27,]    0 #>   [28,]    0 #>   [29,]    1 #>   [30,]    0 #>   [31,]    0 #>   [32,]    0 #>   [33,]    0 #>   [34,]    1 #>   [35,]    1 #>   [36,]    0 #>   [37,]    0 #>   [38,]    0 #>   [39,]    1 #>   [40,]    0 #>   [41,]    0 #>   [42,]    1 #>   [43,]    0 #>   [44,]    1 #>   [45,]    0 #>   [46,]    0 #>   [47,]    0 #>   [48,]    0 #>   [49,]    0 #>   [50,]    0 #>   [51,]    1 #>   [52,]    1 #>   [53,]    0 #>   [54,]    1 #>   [55,]    0 #>   [56,]    1 #>   [57,]    0 #>   [58,]    0 #>   [59,]    0 #>   [60,]    0 #>   [61,]    0 #>   [62,]    0 #>   [63,]    1 #>   [64,]    0 #>   [65,]    0 #>   [66,]    1 #>   [67,]    1 #>   [68,]    0 #>   [69,]    1 #>   [70,]    0 #>   [71,]    0 #>   [72,]    1 #>   [73,]    0 #>   [74,]    0 #>   [75,]    0 #>   [76,]    0 #>   [77,]    1 #>   [78,]    1 #>   [79,]    0 #>   [80,]    1 #>   [81,]    0 #>   [82,]    1 #>   [83,]    1 #>   [84,]    0 #>   [85,]    0 #>   [86,]    0 #>   [87,]    1 #>   [88,]    1 #>   [89,]    0 #>   [90,]    1 #>   [91,]    1 #>   [92,]    0 #>   [93,]    0 #>   [94,]    0 #>   [95,]    0 #>   [96,]    1 #>   [97,]    1 #>   [98,]    1 #>   [99,]    0 #>  [100,]    1 #>  [101,]    0 #>  [102,]    0 #>  [103,]    1 #>  [104,]    1 #>  [105,]    1 #>  [106,]    1 #>  [107,]    0 #>  [108,]    1 #>  [109,]    1 #>  [110,]    0 #>  [111,]    0 #>  [112,]    1 #>  [113,]    0 #>  [114,]    0 #>  [115,]    1 #>  [116,]    1 #>  [117,]    1 #>  [118,]    1 #>  [119,]    1 #>  [120,]    1 #>  [121,]    1 #>  [122,]    1 #>  [123,]    1 #>  [124,]    1 #>  [125,]    1 #>  [126,]    0 #>  [127,]    1 #>  [128,]    0 #>  [129,]    1 #>  [130,]    0 #>  [131,]    1 #>  [132,]    0 #>  [133,]    0 #>  [134,]    0 #>  [135,]    1 #>  [136,]    1 #>  [137,]    0 #>  [138,]    0 #>  [139,]    0 #>  [140,]    0 #>  [141,]    0 #>  [142,]    1 #>  [143,]    0 #>  [144,]    0 #>  [145,]    0 #>  [146,]    1 #>  [147,]    0 #>  [148,]    0 #>  [149,]    1 #>  [150,]    0 #>  [151,]    0 #>  [152,]    0 #>  [153,]    1 #>  [154,]    1 #>  [155,]    1 #>  [156,]    1 #>  [157,]    0 #>  [158,]    0 #>  [159,]    0 #>  [160,]    1 #>  [161,]    1 #>  [162,]    1 #>  [163,]    0 #>  [164,]    1 #>  [165,]    0 #>  [166,]    1 #>  [167,]    1 #>  [168,]    1 #>  [169,]    1 #>  [170,]    0 #>  [171,]    0 #>  [172,]    0 #>  [173,]    0 #>  [174,]    0 #>  [175,]    0 #>  [176,]    1 #>  [177,]    1 #>  [178,]    0 #>  [179,]    1 #>  [180,]    1 #>  [181,]    1 #>  [182,]    0 #>  [183,]    0 #>  [184,]    0 #>  [185,]    0 #>  [186,]    0 #>  [187,]    0 #>  [188,]    0 #>  [189,]    0 #>  [190,]    0 #>  [191,]    0 #>  [192,]    1 #>  [193,]    1 #>  [194,]    0 #>  [195,]    1 #>  [196,]    0 #>  [197,]    0 #>  [198,]    0 #>  [199,]    0 #>  [200,]    1 #>  [201,]    0 #>  [202,]    0 #>  [203,]    0 #>  [204,]    1 #>  [205,]    1 #>  [206,]    1 #>  [207,]    1 #>  [208,]    1 #>  [209,]    0 #>  [210,]    1 #>  [211,]    0 #>  [212,]    1 #>  [213,]    1 #>  [214,]    0 #>  [215,]    0 #>  [216,]    0 #>  [217,]    0 #>  [218,]    0 #>  [219,]    0 #>  [220,]    0 #>  [221,]    1 #>  [222,]    0 #>  [223,]    0 #>  [224,]    0 #>  [225,]    1 #>  [226,]    1 #>  [227,]    0 #>  [228,]    1 #>  [229,]    0 #>  [230,]    0 #>  [231,]    0 #>  [232,]    0 #>  [233,]    1 #>  [234,]    1 #>  [235,]    1 #>  [236,]    0 #>  [237,]    0 #>  [238,]    0 #>  [239,]    1 #>  [240,]    1 #>  [241,]    1 #>  [242,]    0 #>  [243,]    0 #>  [244,]    0 #>  [245,]    1 #>  [246,]    1 #>  [247,]    1 #>  [248,]    1 #>  [249,]    1 #>  [250,]    0 #>  [251,]    1 #>  [252,]    1 #>  [253,]    1 #>  [254,]    0 #>  [255,]    1 #>  [256,]    0 #>  [257,]    0 #>  [258,]    1 #>  [259,]    0 #>  [260,]    1 #>  [261,]    1 #>  [262,]    0 #>  [263,]    0 #>  [264,]    1 #>  [265,]    0 #>  [266,]    0 #>  [267,]    0 #>  [268,]    1 #>  [269,]    1 #>  [270,]    0 #>  [271,]    1 #>  [272,]    0 #>  [273,]    0 #>  [274,]    0 #>  [275,]    0 #>  [276,]    1 #>  [277,]    0 #>  [278,]    0 #>  [279,]    1 #>  [280,]    1 #>  [281,]    0 #>  [282,]    0 #>  [283,]    0 #>  [284,]    0 #>  [285,]    1 #>  [286,]    0 #>  [287,]    0 #>  [288,]    0 #>  [289,]    0 #>  [290,]    0 #>  [291,]    0 #>  [292,]    0 #>  [293,]    0 #>  [294,]    0 #>  [295,]    0 #>  [296,]    0 #>  [297,]    1 #>  [298,]    1 #>  [299,]    1 #>  [300,]    0 #>  [301,]    0 #>  [302,]    0 #>  [303,]    0 #>  [304,]    0 #>  [305,]    0 #>  [306,]    0 #>  [307,]    0 #>  [308,]    1 #>  [309,]    1 #>  [310,]    0 #>  [311,]    0 #>  [312,]    1 #>  [313,]    1 #>  [314,]    0 #>  [315,]    1 #>  [316,]    0 #>  [317,]    0 #>  [318,]    1 #>  [319,]    0 #>  [320,]    1 #>  [321,]    0 #>  [322,]    1 #>  [323,]    0 #>  [324,]    1 #>  [325,]    0 #>  [326,]    0 #>  [327,]    0 #>  [328,]    0 #>  [329,]    1 #>  [330,]    0 #>  [331,]    1 #>  [332,]    0 #>  [333,]    0 #>  [334,]    1 #>  [335,]    0 #>  [336,]    1 #>  [337,]    0 #>  [338,]    1 #>  [339,]    0 #>  [340,]    1 #>  [341,]    1 #>  [342,]    0 #>  [343,]    0 #>  [344,]    1 #>  [345,]    1 #>  [346,]    1 #>  [347,]    0 #>  [348,]    1 #>  [349,]    1 #>  [350,]    1 #>  [351,]    0 #>  [352,]    0 #>  [353,]    1 #>  [354,]    0 #>  [355,]    1 #>  [356,]    1 #>  [357,]    0 #>  [358,]    0 #>  [359,]    0 #>  [360,]    1 #>  [361,]    1 #>  [362,]    0 #>  [363,]    0 #>  [364,]    1 #>  [365,]    1 #>  [366,]    0 #>  [367,]    0 #>  [368,]    1 #>  [369,]    1 #>  [370,]    1 #>  [371,]    1 #>  [372,]    0 #>  [373,]    0 #>  [374,]    0 #>  [375,]    0 #>  [376,]    0 #>  [377,]    0 #>  [378,]    0 #>  [379,]    0 #>  [380,]    0 #>  [381,]    1 #>  [382,]    1 #>  [383,]    0 #>  [384,]    1 #>  [385,]    1 #>  [386,]    0 #>  [387,]    0 #>  [388,]    1 #>  [389,]    0 #>  [390,]    1 #>  [391,]    1 #>  [392,]    0 #>  [393,]    0 #>  [394,]    1 #>  [395,]    0 #>  [396,]    0 #>  [397,]    0 #>  [398,]    0 #>  [399,]    0 #>  [400,]    0 #>  [401,]    0 #>  [402,]    0 #>  [403,]    1 #>  [404,]    1 #>  [405,]    0 #>  [406,]    1 #>  [407,]    1 #>  [408,]    0 #>  [409,]    0 #>  [410,]    0 #>  [411,]    0 #>  [412,]    1 #>  [413,]    0 #>  [414,]    0 #>  [415,]    1 #>  [416,]    0 #>  [417,]    0 #>  [418,]    1 #>  [419,]    1 #>  [420,]    0 #>  [421,]    0 #>  [422,]    0 #>  [423,]    0 #>  [424,]    0 #>  [425,]    0 #>  [426,]    1 #>  [427,]    0 #>  [428,]    1 #>  [429,]    1 #>  [430,]    0 #>  [431,]    0 #>  [432,]    0 #>  [433,]    1 #>  [434,]    1 #>  [435,]    1 #>  [436,]    1 #>  [437,]    1 #>  [438,]    1 #>  [439,]    1 #>  [440,]    1 #>  [441,]    0 #>  [442,]    0 #>  [443,]    1 #>  [444,]    1 #>  [445,]    0 #>  [446,]    1 #>  [447,]    0 #>  [448,]    0 #>  [449,]    0 #>  [450,]    0 #>  [451,]    0 #>  [452,]    0 #>  [453,]    0 #>  [454,]    1 #>  [455,]    1 #>  [456,]    1 #>  [457,]    1 #>  [458,]    0 #>  [459,]    0 #>  [460,]    0 #>  [461,]    0 #>  [462,]    1 #>  [463,]    0 #>  [464,]    1 #>  [465,]    0 #>  [466,]    0 #>  [467,]    0 #>  [468,]    0 #>  [469,]    0 #>  [470,]    1 #>  [471,]    1 #>  [472,]    0 #>  [473,]    0 #>  [474,]    0 #>  [475,]    1 #>  [476,]    0 #>  [477,]    1 #>  [478,]    1 #>  [479,]    0 #>  [480,]    1 #>  [481,]    1 #>  [482,]    1 #>  [483,]    1 #>  [484,]    0 #>  [485,]    1 #>  [486,]    1 #>  [487,]    0 #>  [488,]    0 #>  [489,]    1 #>  [490,]    1 #>  [491,]    1 #>  [492,]    0 #>  [493,]    1 #>  [494,]    0 #>  [495,]    0 #>  [496,]    0 #>  [497,]    0 #>  [498,]    1 #>  [499,]    1 #>  [500,]    0 #>  [501,]    1 #>  [502,]    1 #>  [503,]    0 #>  [504,]    0 #>  [505,]    0 #>  [506,]    0 #>  [507,]    0 #>  [508,]    1 #>  [509,]    0 #>  [510,]    1 #>  [511,]    0 #>  [512,]    0 #>  [513,]    0 #>  [514,]    0 #>  [515,]    0 #>  [516,]    1 #>  [517,]    0 #>  [518,]    0 #>  [519,]    1 #>  [520,]    0 #>  [521,]    0 #>  [522,]    1 #>  [523,]    0 #>  [524,]    0 #>  [525,]    0 #>  [526,]    1 #>  [527,]    1 #>  [528,]    0 #>  [529,]    1 #>  [530,]    1 #>  [531,]    1 #>  [532,]    1 #>  [533,]    1 #>  [534,]    1 #>  [535,]    0 #>  [536,]    0 #>  [537,]    1 #>  [538,]    0 #>  [539,]    1 #>  [540,]    0 #>  [541,]    0 #>  [542,]    1 #>  [543,]    0 #>  [544,]    1 #>  [545,]    1 #>  [546,]    1 #>  [547,]    0 #>  [548,]    1 #>  [549,]    1 #>  [550,]    1 #>  [551,]    1 #>  [552,]    0 #>  [553,]    0 #>  [554,]    0 #>  [555,]    1 #>  [556,]    1 #>  [557,]    1 #>  [558,]    0 #>  [559,]    1 #>  [560,]    1 #>  [561,]    0 #>  [562,]    0 #>  [563,]    0 #>  [564,]    0 #>  [565,]    0 #>  [566,]    1 #>  [567,]    1 #>  [568,]    0 #>  [569,]    0 #>  [570,]    1 #>  [571,]    0 #>  [572,]    0 #>  [573,]    1 #>  [574,]    1 #>  [575,]    1 #>  [576,]    1 #>  [577,]    1 #>  [578,]    0 #>  [579,]    1 #>  [580,]    1 #>  [581,]    0 #>  [582,]    1 #>  [583,]    1 #>  [584,]    0 #>  [585,]    0 #>  [586,]    0 #>  [587,]    0 #>  [588,]    0 #>  [589,]    1 #>  [590,]    0 #>  [591,]    0 #>  [592,]    1 #>  [593,]    1 #>  [594,]    0 #>  [595,]    0 #>  [596,]    1 #>  [597,]    1 #>  [598,]    0 #>  [599,]    0 #>  [600,]    1 #>  [601,]    1 #>  [602,]    1 #>  [603,]    0 #>  [604,]    0 #>  [605,]    0 #>  [606,]    1 #>  [607,]    1 #>  [608,]    0 #>  [609,]    1 #>  [610,]    0 #>  [611,]    0 #>  [612,]    1 #>  [613,]    1 #>  [614,]    1 #>  [615,]    1 #>  [616,]    1 #>  [617,]    1 #>  [618,]    1 #>  [619,]    0 #>  [620,]    0 #>  [621,]    1 #>  [622,]    0 #>  [623,]    1 #>  [624,]    0 #>  [625,]    0 #>  [626,]    0 #>  [627,]    0 #>  [628,]    0 #>  [629,]    0 #>  [630,]    0 #>  [631,]    0 #>  [632,]    1 #>  [633,]    1 #>  [634,]    0 #>  [635,]    1 #>  [636,]    0 #>  [637,]    1 #>  [638,]    1 #>  [639,]    1 #>  [640,]    0 #>  [641,]    0 #>  [642,]    0 #>  [643,]    0 #>  [644,]    0 #>  [645,]    0 #>  [646,]    1 #>  [647,]    0 #>  [648,]    0 #>  [649,]    0 #>  [650,]    1 #>  [651,]    1 #>  [652,]    0 #>  [653,]    0 #>  [654,]    1 #>  [655,]    1 #>  [656,]    0 #>  [657,]    1 #>  [658,]    0 #>  [659,]    0 #>  [660,]    1 #>  [661,]    1 #>  [662,]    1 #>  [663,]    1 #>  [664,]    0 #>  [665,]    0 #>  [666,]    0 #>  [667,]    0 #>  [668,]    1 #>  [669,]    0 #>  [670,]    0 #>  [671,]    1 #>  [672,]    1 #>  [673,]    1 #>  [674,]    0 #>  [675,]    1 #>  [676,]    1 #>  [677,]    0 #>  [678,]    0 #>  [679,]    0 #>  [680,]    0 #>  [681,]    0 #>  [682,]    1 #>  [683,]    0 #>  [684,]    0 #>  [685,]    0 #>  [686,]    0 #>  [687,]    0 #>  [688,]    0 #>  [689,]    1 #>  [690,]    0 #>  [691,]    1 #>  [692,]    1 #>  [693,]    1 #>  [694,]    1 #>  [695,]    1 #>  [696,]    0 #>  [697,]    0 #>  [698,]    0 #>  [699,]    0 #>  [700,]    1 #>  [701,]    0 #>  [702,]    1 #>  [703,]    1 #>  [704,]    0 #>  [705,]    1 #>  [706,]    1 #>  [707,]    0 #>  [708,]    1 #>  [709,]    0 #>  [710,]    0 #>  [711,]    1 #>  [712,]    0 #>  [713,]    0 #>  [714,]    1 #>  [715,]    0 #>  [716,]    0 #>  [717,]    1 #>  [718,]    0 #>  [719,]    1 #>  [720,]    0 #>  [721,]    1 #>  [722,]    1 #>  [723,]    0 #>  [724,]    0 #>  [725,]    0 #>  [726,]    0 #>  [727,]    1 #>  [728,]    0 #>  [729,]    0 #>  [730,]    0 #>  [731,]    0 #>  [732,]    0 #>  [733,]    1 #>  [734,]    0 #>  [735,]    0 #>  [736,]    0 #>  [737,]    0 #>  [738,]    0 #>  [739,]    0 #>  [740,]    1 #>  [741,]    0 #>  [742,]    0 #>  [743,]    1 #>  [744,]    0 #>  [745,]    0 #>  [746,]    1 #>  [747,]    1 #>  [748,]    0 #>  [749,]    0 #>  [750,]    0 #>  [751,]    1 #>  [752,]    1 #>  [753,]    0 #>  [754,]    1 #>  [755,]    0 #>  [756,]    0 #>  [757,]    1 #>  [758,]    0 #>  [759,]    0 #>  [760,]    0 #>  [761,]    0 #>  [762,]    1 #>  [763,]    0 #>  [764,]    1 #>  [765,]    0 #>  [766,]    0 #>  [767,]    1 #>  [768,]    1 #>  [769,]    0 #>  [770,]    0 #>  [771,]    0 #>  [772,]    1 #>  [773,]    0 #>  [774,]    0 #>  [775,]    0 #>  [776,]    0 #>  [777,]    1 #>  [778,]    1 #>  [779,]    0 #>  [780,]    0 #>  [781,]    0 #>  [782,]    1 #>  [783,]    0 #>  [784,]    1 #>  [785,]    1 #>  [786,]    1 #>  [787,]    0 #>  [788,]    1 #>  [789,]    1 #>  [790,]    0 #>  [791,]    1 #>  [792,]    0 #>  [793,]    1 #>  [794,]    1 #>  [795,]    0 #>  [796,]    0 #>  [797,]    0 #>  [798,]    1 #>  [799,]    0 #>  [800,]    1 #>  [801,]    0 #>  [802,]    0 #>  [803,]    0 #>  [804,]    1 #>  [805,]    1 #>  [806,]    0 #>  [807,]    1 #>  [808,]    1 #>  [809,]    1 #>  [810,]    0 #>  [811,]    1 #>  [812,]    0 #>  [813,]    1 #>  [814,]    1 #>  [815,]    0 #>  [816,]    1 #>  [817,]    0 #>  [818,]    0 #>  [819,]    1 #>  [820,]    0 #>  [821,]    0 #>  [822,]    0 #>  [823,]    0 #>  [824,]    1 #>  [825,]    1 #>  [826,]    1 #>  [827,]    1 #>  [828,]    0 #>  [829,]    1 #>  [830,]    0 #>  [831,]    0 #>  [832,]    1 #>  [833,]    0 #>  [834,]    0 #>  [835,]    0 #>  [836,]    0 #>  [837,]    0 #>  [838,]    0 #>  [839,]    0 #>  [840,]    0 #>  [841,]    1 #>  [842,]    0 #>  [843,]    1 #>  [844,]    0 #>  [845,]    0 #>  [846,]    0 #>  [847,]    0 #>  [848,]    0 #>  [849,]    1 #>  [850,]    0 #>  [851,]    0 #>  [852,]    1 #>  [853,]    1 #>  [854,]    1 #>  [855,]    0 #>  [856,]    0 #>  [857,]    1 #>  [858,]    0 #>  [859,]    1 #>  [860,]    1 #>  [861,]    0 #>  [862,]    0 #>  [863,]    1 #>  [864,]    0 #>  [865,]    0 #>  [866,]    0 #>  [867,]    0 #>  [868,]    0 #>  [869,]    0 #>  [870,]    1 #>  [871,]    0 #>  [872,]    1 #>  [873,]    0 #>  [874,]    0 #>  [875,]    0 #>  [876,]    0 #>  [877,]    0 #>  [878,]    0 #>  [879,]    0 #>  [880,]    1 #>  [881,]    0 #>  [882,]    0 #>  [883,]    0 #>  [884,]    1 #>  [885,]    0 #>  [886,]    0 #>  [887,]    0 #>  [888,]    0 #>  [889,]    1 #>  [890,]    1 #>  [891,]    1 #>  [892,]    0 #>  [893,]    0 #>  [894,]    1 #>  [895,]    0 #>  [896,]    0 #>  [897,]    1 #>  [898,]    1 #>  [899,]    1 #>  [900,]    1 #>  [901,]    0 #>  [902,]    1 #>  [903,]    0 #>  [904,]    1 #>  [905,]    0 #>  [906,]    1 #>  [907,]    1 #>  [908,]    0 #>  [909,]    0 #>  [910,]    0 #>  [911,]    1 #>  [912,]    1 #>  [913,]    0 #>  [914,]    0 #>  [915,]    0 #>  [916,]    0 #>  [917,]    1 #>  [918,]    1 #>  [919,]    0 #>  [920,]    0 #>  [921,]    0 #>  [922,]    0 #>  [923,]    0 #>  [924,]    1 #>  [925,]    1 #>  [926,]    0 #>  [927,]    0 #>  [928,]    1 #>  [929,]    1 #>  [930,]    0 #>  [931,]    0 #>  [932,]    0 #>  [933,]    0 #>  [934,]    1 #>  [935,]    0 #>  [936,]    0 #>  [937,]    0 #>  [938,]    0 #>  [939,]    0 #>  [940,]    1 #>  [941,]    0 #>  [942,]    0 #>  [943,]    0 #>  [944,]    0 #>  [945,]    1 #>  [946,]    0 #>  [947,]    1 #>  [948,]    1 #>  [949,]    1 #>  [950,]    0 #>  [951,]    0 #>  [952,]    1 #>  [953,]    0 #>  [954,]    1 #>  [955,]    0 #>  [956,]    0 #>  [957,]    0 #>  [958,]    0 #>  [959,]    1 #>  [960,]    1 #>  [961,]    1 #>  [962,]    0 #>  [963,]    0 #>  [964,]    0 #>  [965,]    0 #>  [966,]    1 #>  [967,]    0 #>  [968,]    0 #>  [969,]    0 #>  [970,]    0 #>  [971,]    0 #>  [972,]    1 #>  [973,]    0 #>  [974,]    1 #>  [975,]    1 #>  [976,]    0 #>  [977,]    0 #>  [978,]    0 #>  [979,]    1 #>  [980,]    0 #>  [981,]    0 #>  [982,]    0 #>  [983,]    1 #>  [984,]    0 #>  [985,]    1 #>  [986,]    0 #>  [987,]    1 #>  [988,]    0 #>  [989,]    0 #>  [990,]    0 #>  [991,]    1 #>  [992,]    0 #>  [993,]    1 #>  [994,]    1 #>  [995,]    0 #>  [996,]    1 #>  [997,]    0 #>  [998,]    0 #>  [999,]    1 #> [1000,]    0 #>  [ reached getOption(\"max.print\") -- omitted 1000 rows ] #>  #> $Z #>    [1] 0 1 1 0 0 1 1 1 0 1 0 0 0 0 1 1 1 0 1 0 0 1 0 0 0 0 1 0 1 1 1 0 0 1 1 1 0 #>   [38] 0 1 0 1 0 1 0 0 0 0 1 1 0 1 1 1 0 0 1 0 0 0 0 1 0 1 1 1 1 1 0 1 0 0 0 0 0 #>   [75] 0 0 0 0 1 0 1 1 0 1 0 1 0 1 0 1 1 0 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 1 1 #>  [112] 1 1 0 0 1 0 0 1 1 1 1 0 1 0 0 0 1 0 0 1 1 0 0 1 0 0 0 0 0 1 0 0 1 0 0 0 0 #>  [149] 1 1 0 1 1 1 0 1 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 #>  [186] 0 0 0 0 1 1 1 0 1 0 0 1 0 0 1 0 1 0 0 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 0 1 1 #>  [223] 0 0 1 0 1 1 0 0 0 0 0 1 1 0 1 1 1 1 0 1 0 0 1 1 1 1 1 0 1 1 1 1 0 0 1 1 0 #>  [260] 0 1 1 0 1 1 1 0 1 1 1 0 0 0 1 0 1 1 0 1 0 0 0 0 1 1 0 0 0 0 0 0 1 0 0 0 0 #>  [297] 1 1 0 1 0 1 0 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 #>  [334] 1 0 1 0 1 0 1 0 1 0 1 1 0 0 1 1 0 0 0 1 1 1 0 1 1 1 0 1 0 0 1 1 0 0 0 1 0 #>  [371] 1 1 1 0 0 0 0 1 1 1 1 1 0 1 1 0 1 1 1 1 1 0 0 0 1 0 0 1 0 0 0 0 1 1 0 1 1 #>  [408] 0 0 0 0 1 1 1 1 0 0 1 1 0 0 0 1 1 0 1 0 0 1 0 0 1 1 1 1 0 0 1 1 0 1 0 1 1 #>  [445] 1 1 0 1 0 1 0 0 0 1 1 0 1 0 0 0 1 0 0 0 1 0 1 0 1 1 1 0 1 0 0 0 1 1 0 0 1 #>  [482] 1 1 1 1 0 0 0 1 1 1 0 1 1 0 0 0 1 0 0 0 1 1 0 0 1 0 0 1 1 0 0 1 0 1 1 0 1 #>  [519] 0 1 1 0 1 0 0 1 0 1 1 0 1 1 0 1 1 1 1 0 0 0 0 1 0 1 1 1 0 0 1 0 0 1 0 0 1 #>  [556] 0 1 0 1 1 0 0 0 0 0 0 1 0 0 0 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 1 #>  [593] 0 0 0 0 1 1 1 1 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 0 1 0 1 #>  [630] 0 1 0 0 0 1 1 1 1 0 0 1 0 0 0 1 0 1 0 0 0 1 1 0 1 1 0 0 1 0 1 0 1 1 1 0 0 #>  [667] 0 1 0 0 1 1 1 1 0 0 0 1 1 0 0 1 1 0 0 0 0 0 1 1 0 1 1 1 1 1 0 0 1 0 0 0 1 #>  [704] 0 0 1 1 1 0 0 0 1 0 1 0 0 1 1 0 1 1 0 1 0 0 0 1 0 0 1 0 1 0 0 0 0 0 1 0 0 #>  [741] 1 1 1 0 1 1 1 1 0 1 1 1 1 1 0 0 0 1 0 0 1 1 0 0 1 1 1 1 1 1 0 1 0 1 1 0 1 #>  [778] 0 1 0 0 1 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 0 1 0 0 0 0 1 0 0 1 1 1 1 1 1 1 0 #>  [815] 0 0 1 1 1 0 0 0 0 1 1 1 0 0 1 0 0 0 1 0 0 0 0 1 0 0 1 0 0 1 0 0 0 1 0 0 0 #>  [852] 1 1 0 0 0 0 1 1 1 0 0 0 0 1 0 0 0 0 0 0 0 1 0 1 1 1 0 0 1 1 0 1 0 1 0 1 1 #>  [889] 1 1 1 0 0 0 0 1 0 0 1 1 0 1 1 0 0 1 1 1 0 1 1 1 0 0 0 0 1 1 0 1 0 0 0 1 0 #>  [926] 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 1 0 1 1 0 0 0 0 1 0 1 0 0 0 1 1 1 0 #>  [963] 0 0 0 1 0 1 0 1 0 0 0 1 1 0 1 0 0 1 0 0 0 1 1 0 0 1 0 0 0 1 1 1 1 1 1 1 1 #> [1000] 0 #>  [ reached getOption(\"max.print\") -- omitted 1000 entries ] #>  #> $IEM #>         [,1] #>    [1,]    1 #>    [2,]    1 #>    [3,]    1 #>    [4,]    1 #>    [5,]    1 #>    [6,]    1 #>    [7,]    1 #>    [8,]    1 #>    [9,]    1 #>   [10,]    0 #>   [11,]    1 #>   [12,]    0 #>   [13,]    0 #>   [14,]    1 #>   [15,]    1 #>   [16,]    1 #>   [17,]    1 #>   [18,]    1 #>   [19,]    0 #>   [20,]    1 #>   [21,]    1 #>   [22,]    0 #>   [23,]    1 #>   [24,]    0 #>   [25,]    0 #>   [26,]    1 #>   [27,]    0 #>   [28,]    1 #>   [29,]    1 #>   [30,]    1 #>   [31,]    1 #>   [32,]    1 #>   [33,]    1 #>   [34,]    1 #>   [35,]    1 #>   [36,]    1 #>   [37,]    1 #>   [38,]    1 #>   [39,]    0 #>   [40,]    1 #>   [41,]    0 #>   [42,]    1 #>   [43,]    0 #>   [44,]    1 #>   [45,]    0 #>   [46,]    0 #>   [47,]    1 #>   [48,]    1 #>   [49,]    1 #>   [50,]    1 #>   [51,]    1 #>   [52,]    1 #>   [53,]    1 #>   [54,]    1 #>   [55,]    1 #>   [56,]    0 #>   [57,]    1 #>   [58,]    0 #>   [59,]    0 #>   [60,]    1 #>   [61,]    0 #>   [62,]    1 #>   [63,]    1 #>   [64,]    1 #>   [65,]    1 #>   [66,]    1 #>   [67,]    1 #>   [68,]    1 #>   [69,]    0 #>   [70,]    1 #>   [71,]    0 #>   [72,]    0 #>   [73,]    0 #>   [74,]    0 #>   [75,]    0 #>   [76,]    0 #>   [77,]    0 #>   [78,]    1 #>   [79,]    0 #>   [80,]    1 #>   [81,]    1 #>   [82,]    1 #>   [83,]    1 #>   [84,]    0 #>   [85,]    1 #>   [86,]    0 #>   [87,]    1 #>   [88,]    0 #>   [89,]    1 #>   [90,]    1 #>   [91,]    1 #>   [92,]    1 #>   [93,]    0 #>   [94,]    1 #>   [95,]    1 #>   [96,]    1 #>   [97,]    1 #>   [98,]    1 #>   [99,]    1 #>  [100,]    1 #>  [101,]    1 #>  [102,]    1 #>  [103,]    1 #>  [104,]    1 #>  [105,]    1 #>  [106,]    1 #>  [107,]    1 #>  [108,]    1 #>  [109,]    1 #>  [110,]    1 #>  [111,]    1 #>  [112,]    1 #>  [113,]    1 #>  [114,]    1 #>  [115,]    1 #>  [116,]    0 #>  [117,]    1 #>  [118,]    1 #>  [119,]    1 #>  [120,]    1 #>  [121,]    1 #>  [122,]    1 #>  [123,]    1 #>  [124,]    0 #>  [125,]    1 #>  [126,]    0 #>  [127,]    1 #>  [128,]    0 #>  [129,]    1 #>  [130,]    1 #>  [131,]    1 #>  [132,]    1 #>  [133,]    1 #>  [134,]    1 #>  [135,]    0 #>  [136,]    1 #>  [137,]    0 #>  [138,]    0 #>  [139,]    0 #>  [140,]    1 #>  [141,]    0 #>  [142,]    1 #>  [143,]    1 #>  [144,]    0 #>  [145,]    1 #>  [146,]    0 #>  [147,]    0 #>  [148,]    1 #>  [149,]    1 #>  [150,]    1 #>  [151,]    1 #>  [152,]    1 #>  [153,]    1 #>  [154,]    1 #>  [155,]    1 #>  [156,]    0 #>  [157,]    1 #>  [158,]    0 #>  [159,]    1 #>  [160,]    1 #>  [161,]    1 #>  [162,]    1 #>  [163,]    1 #>  [164,]    1 #>  [165,]    1 #>  [166,]    1 #>  [167,]    1 #>  [168,]    1 #>  [169,]    1 #>  [170,]    0 #>  [171,]    1 #>  [172,]    0 #>  [173,]    0 #>  [174,]    0 #>  [175,]    1 #>  [176,]    0 #>  [177,]    1 #>  [178,]    0 #>  [179,]    1 #>  [180,]    1 #>  [181,]    1 #>  [182,]    1 #>  [183,]    0 #>  [184,]    0 #>  [185,]    0 #>  [186,]    0 #>  [187,]    0 #>  [188,]    0 #>  [189,]    1 #>  [190,]    1 #>  [191,]    1 #>  [192,]    1 #>  [193,]    1 #>  [194,]    0 #>  [195,]    1 #>  [196,]    1 #>  [197,]    0 #>  [198,]    1 #>  [199,]    1 #>  [200,]    0 #>  [201,]    1 #>  [202,]    0 #>  [203,]    1 #>  [204,]    1 #>  [205,]    1 #>  [206,]    1 #>  [207,]    1 #>  [208,]    0 #>  [209,]    1 #>  [210,]    1 #>  [211,]    1 #>  [212,]    1 #>  [213,]    1 #>  [214,]    1 #>  [215,]    0 #>  [216,]    0 #>  [217,]    0 #>  [218,]    1 #>  [219,]    0 #>  [220,]    1 #>  [221,]    1 #>  [222,]    1 #>  [223,]    1 #>  [224,]    1 #>  [225,]    0 #>  [226,]    1 #>  [227,]    1 #>  [228,]    1 #>  [229,]    1 #>  [230,]    0 #>  [231,]    0 #>  [232,]    0 #>  [233,]    1 #>  [234,]    1 #>  [235,]    1 #>  [236,]    1 #>  [237,]    1 #>  [238,]    1 #>  [239,]    1 #>  [240,]    1 #>  [241,]    1 #>  [242,]    0 #>  [243,]    1 #>  [244,]    1 #>  [245,]    1 #>  [246,]    1 #>  [247,]    1 #>  [248,]    1 #>  [249,]    1 #>  [250,]    1 #>  [251,]    1 #>  [252,]    1 #>  [253,]    1 #>  [254,]    1 #>  [255,]    1 #>  [256,]    1 #>  [257,]    1 #>  [258,]    1 #>  [259,]    1 #>  [260,]    1 #>  [261,]    1 #>  [262,]    1 #>  [263,]    1 #>  [264,]    1 #>  [265,]    1 #>  [266,]    1 #>  [267,]    1 #>  [268,]    1 #>  [269,]    1 #>  [270,]    1 #>  [271,]    1 #>  [272,]    0 #>  [273,]    1 #>  [274,]    0 #>  [275,]    1 #>  [276,]    1 #>  [277,]    1 #>  [278,]    1 #>  [279,]    0 #>  [280,]    1 #>  [281,]    0 #>  [282,]    0 #>  [283,]    1 #>  [284,]    1 #>  [285,]    1 #>  [286,]    1 #>  [287,]    0 #>  [288,]    0 #>  [289,]    0 #>  [290,]    0 #>  [291,]    1 #>  [292,]    0 #>  [293,]    1 #>  [294,]    0 #>  [295,]    0 #>  [296,]    1 #>  [297,]    1 #>  [298,]    1 #>  [299,]    1 #>  [300,]    0 #>  [301,]    1 #>  [302,]    0 #>  [303,]    1 #>  [304,]    0 #>  [305,]    0 #>  [306,]    1 #>  [307,]    1 #>  [308,]    1 #>  [309,]    1 #>  [310,]    1 #>  [311,]    1 #>  [312,]    1 #>  [313,]    1 #>  [314,]    1 #>  [315,]    1 #>  [316,]    1 #>  [317,]    1 #>  [318,]    0 #>  [319,]    0 #>  [320,]    0 #>  [321,]    0 #>  [322,]    1 #>  [323,]    0 #>  [324,]    1 #>  [325,]    0 #>  [326,]    0 #>  [327,]    0 #>  [328,]    1 #>  [329,]    1 #>  [330,]    1 #>  [331,]    1 #>  [332,]    0 #>  [333,]    1 #>  [334,]    0 #>  [335,]    1 #>  [336,]    0 #>  [337,]    1 #>  [338,]    0 #>  [339,]    1 #>  [340,]    0 #>  [341,]    1 #>  [342,]    0 #>  [343,]    1 #>  [344,]    1 #>  [345,]    1 #>  [346,]    1 #>  [347,]    1 #>  [348,]    1 #>  [349,]    1 #>  [350,]    1 #>  [351,]    0 #>  [352,]    1 #>  [353,]    1 #>  [354,]    1 #>  [355,]    1 #>  [356,]    1 #>  [357,]    1 #>  [358,]    1 #>  [359,]    1 #>  [360,]    1 #>  [361,]    0 #>  [362,]    1 #>  [363,]    1 #>  [364,]    1 #>  [365,]    1 #>  [366,]    1 #>  [367,]    0 #>  [368,]    1 #>  [369,]    0 #>  [370,]    1 #>  [371,]    1 #>  [372,]    1 #>  [373,]    1 #>  [374,]    1 #>  [375,]    0 #>  [376,]    0 #>  [377,]    1 #>  [378,]    1 #>  [379,]    1 #>  [380,]    1 #>  [381,]    1 #>  [382,]    1 #>  [383,]    1 #>  [384,]    1 #>  [385,]    1 #>  [386,]    1 #>  [387,]    1 #>  [388,]    1 #>  [389,]    1 #>  [390,]    1 #>  [391,]    1 #>  [392,]    1 #>  [393,]    0 #>  [394,]    1 #>  [395,]    0 #>  [396,]    1 #>  [397,]    1 #>  [398,]    0 #>  [399,]    1 #>  [400,]    0 #>  [401,]    0 #>  [402,]    1 #>  [403,]    1 #>  [404,]    1 #>  [405,]    1 #>  [406,]    1 #>  [407,]    1 #>  [408,]    1 #>  [409,]    0 #>  [410,]    0 #>  [411,]    1 #>  [412,]    1 #>  [413,]    1 #>  [414,]    1 #>  [415,]    1 #>  [416,]    1 #>  [417,]    1 #>  [418,]    1 #>  [419,]    1 #>  [420,]    1 #>  [421,]    0 #>  [422,]    1 #>  [423,]    1 #>  [424,]    1 #>  [425,]    1 #>  [426,]    0 #>  [427,]    1 #>  [428,]    1 #>  [429,]    0 #>  [430,]    1 #>  [431,]    1 #>  [432,]    1 #>  [433,]    1 #>  [434,]    1 #>  [435,]    1 #>  [436,]    1 #>  [437,]    1 #>  [438,]    1 #>  [439,]    1 #>  [440,]    1 #>  [441,]    0 #>  [442,]    1 #>  [443,]    1 #>  [444,]    1 #>  [445,]    1 #>  [446,]    1 #>  [447,]    1 #>  [448,]    0 #>  [449,]    1 #>  [450,]    0 #>  [451,]    1 #>  [452,]    0 #>  [453,]    1 #>  [454,]    1 #>  [455,]    1 #>  [456,]    1 #>  [457,]    0 #>  [458,]    1 #>  [459,]    0 #>  [460,]    1 #>  [461,]    0 #>  [462,]    1 #>  [463,]    0 #>  [464,]    1 #>  [465,]    0 #>  [466,]    1 #>  [467,]    0 #>  [468,]    1 #>  [469,]    1 #>  [470,]    1 #>  [471,]    1 #>  [472,]    1 #>  [473,]    0 #>  [474,]    1 #>  [475,]    0 #>  [476,]    1 #>  [477,]    1 #>  [478,]    1 #>  [479,]    1 #>  [480,]    1 #>  [481,]    1 #>  [482,]    1 #>  [483,]    1 #>  [484,]    1 #>  [485,]    1 #>  [486,]    1 #>  [487,]    0 #>  [488,]    1 #>  [489,]    1 #>  [490,]    1 #>  [491,]    1 #>  [492,]    1 #>  [493,]    1 #>  [494,]    1 #>  [495,]    1 #>  [496,]    0 #>  [497,]    1 #>  [498,]    0 #>  [499,]    1 #>  [500,]    0 #>  [501,]    1 #>  [502,]    1 #>  [503,]    1 #>  [504,]    1 #>  [505,]    1 #>  [506,]    0 #>  [507,]    1 #>  [508,]    1 #>  [509,]    1 #>  [510,]    1 #>  [511,]    1 #>  [512,]    1 #>  [513,]    0 #>  [514,]    1 #>  [515,]    1 #>  [516,]    1 #>  [517,]    1 #>  [518,]    0 #>  [519,]    1 #>  [520,]    1 #>  [521,]    1 #>  [522,]    1 #>  [523,]    0 #>  [524,]    1 #>  [525,]    1 #>  [526,]    0 #>  [527,]    1 #>  [528,]    1 #>  [529,]    1 #>  [530,]    1 #>  [531,]    1 #>  [532,]    1 #>  [533,]    1 #>  [534,]    1 #>  [535,]    1 #>  [536,]    1 #>  [537,]    1 #>  [538,]    1 #>  [539,]    0 #>  [540,]    0 #>  [541,]    1 #>  [542,]    0 #>  [543,]    1 #>  [544,]    1 #>  [545,]    1 #>  [546,]    1 #>  [547,]    1 #>  [548,]    1 #>  [549,]    0 #>  [550,]    1 #>  [551,]    1 #>  [552,]    0 #>  [553,]    1 #>  [554,]    1 #>  [555,]    0 #>  [556,]    1 #>  [557,]    0 #>  [558,]    1 #>  [559,]    1 #>  [560,]    1 #>  [561,]    1 #>  [562,]    0 #>  [563,]    0 #>  [564,]    0 #>  [565,]    0 #>  [566,]    1 #>  [567,]    0 #>  [568,]    1 #>  [569,]    0 #>  [570,]    1 #>  [571,]    0 #>  [572,]    1 #>  [573,]    1 #>  [574,]    1 #>  [575,]    1 #>  [576,]    1 #>  [577,]    1 #>  [578,]    1 #>  [579,]    1 #>  [580,]    1 #>  [581,]    1 #>  [582,]    1 #>  [583,]    1 #>  [584,]    1 #>  [585,]    1 #>  [586,]    1 #>  [587,]    1 #>  [588,]    1 #>  [589,]    0 #>  [590,]    0 #>  [591,]    1 #>  [592,]    0 #>  [593,]    1 #>  [594,]    0 #>  [595,]    0 #>  [596,]    1 #>  [597,]    1 #>  [598,]    1 #>  [599,]    1 #>  [600,]    1 #>  [601,]    1 #>  [602,]    1 #>  [603,]    1 #>  [604,]    1 #>  [605,]    0 #>  [606,]    1 #>  [607,]    1 #>  [608,]    1 #>  [609,]    1 #>  [610,]    1 #>  [611,]    0 #>  [612,]    1 #>  [613,]    1 #>  [614,]    1 #>  [615,]    1 #>  [616,]    1 #>  [617,]    1 #>  [618,]    0 #>  [619,]    0 #>  [620,]    1 #>  [621,]    1 #>  [622,]    1 #>  [623,]    1 #>  [624,]    1 #>  [625,]    1 #>  [626,]    1 #>  [627,]    0 #>  [628,]    1 #>  [629,]    0 #>  [630,]    1 #>  [631,]    0 #>  [632,]    1 #>  [633,]    0 #>  [634,]    1 #>  [635,]    1 #>  [636,]    1 #>  [637,]    1 #>  [638,]    1 #>  [639,]    1 #>  [640,]    1 #>  [641,]    0 #>  [642,]    1 #>  [643,]    0 #>  [644,]    1 #>  [645,]    0 #>  [646,]    1 #>  [647,]    0 #>  [648,]    1 #>  [649,]    0 #>  [650,]    1 #>  [651,]    1 #>  [652,]    1 #>  [653,]    1 #>  [654,]    1 #>  [655,]    1 #>  [656,]    1 #>  [657,]    1 #>  [658,]    0 #>  [659,]    1 #>  [660,]    0 #>  [661,]    1 #>  [662,]    1 #>  [663,]    1 #>  [664,]    1 #>  [665,]    1 #>  [666,]    0 #>  [667,]    1 #>  [668,]    0 #>  [669,]    1 #>  [670,]    1 #>  [671,]    1 #>  [672,]    1 #>  [673,]    1 #>  [674,]    1 #>  [675,]    1 #>  [676,]    0 #>  [677,]    1 #>  [678,]    1 #>  [679,]    1 #>  [680,]    1 #>  [681,]    1 #>  [682,]    1 #>  [683,]    1 #>  [684,]    1 #>  [685,]    0 #>  [686,]    0 #>  [687,]    0 #>  [688,]    1 #>  [689,]    1 #>  [690,]    1 #>  [691,]    1 #>  [692,]    1 #>  [693,]    1 #>  [694,]    1 #>  [695,]    1 #>  [696,]    1 #>  [697,]    1 #>  [698,]    1 #>  [699,]    0 #>  [700,]    1 #>  [701,]    0 #>  [702,]    1 #>  [703,]    0 #>  [704,]    1 #>  [705,]    1 #>  [706,]    1 #>  [707,]    1 #>  [708,]    1 #>  [709,]    1 #>  [710,]    0 #>  [711,]    1 #>  [712,]    0 #>  [713,]    1 #>  [714,]    0 #>  [715,]    1 #>  [716,]    1 #>  [717,]    1 #>  [718,]    1 #>  [719,]    1 #>  [720,]    1 #>  [721,]    1 #>  [722,]    1 #>  [723,]    0 #>  [724,]    1 #>  [725,]    0 #>  [726,]    1 #>  [727,]    0 #>  [728,]    1 #>  [729,]    1 #>  [730,]    0 #>  [731,]    1 #>  [732,]    0 #>  [733,]    1 #>  [734,]    0 #>  [735,]    0 #>  [736,]    0 #>  [737,]    1 #>  [738,]    0 #>  [739,]    1 #>  [740,]    1 #>  [741,]    1 #>  [742,]    1 #>  [743,]    1 #>  [744,]    1 #>  [745,]    1 #>  [746,]    1 #>  [747,]    1 #>  [748,]    1 #>  [749,]    1 #>  [750,]    1 #>  [751,]    1 #>  [752,]    1 #>  [753,]    1 #>  [754,]    1 #>  [755,]    1 #>  [756,]    0 #>  [757,]    1 #>  [758,]    0 #>  [759,]    1 #>  [760,]    1 #>  [761,]    1 #>  [762,]    1 #>  [763,]    1 #>  [764,]    1 #>  [765,]    1 #>  [766,]    1 #>  [767,]    1 #>  [768,]    1 #>  [769,]    1 #>  [770,]    1 #>  [771,]    1 #>  [772,]    0 #>  [773,]    1 #>  [774,]    1 #>  [775,]    1 #>  [776,]    1 #>  [777,]    0 #>  [778,]    1 #>  [779,]    0 #>  [780,]    1 #>  [781,]    1 #>  [782,]    1 #>  [783,]    1 #>  [784,]    1 #>  [785,]    1 #>  [786,]    1 #>  [787,]    1 #>  [788,]    1 #>  [789,]    1 #>  [790,]    1 #>  [791,]    1 #>  [792,]    0 #>  [793,]    1 #>  [794,]    1 #>  [795,]    1 #>  [796,]    1 #>  [797,]    1 #>  [798,]    1 #>  [799,]    0 #>  [800,]    1 #>  [801,]    0 #>  [802,]    0 #>  [803,]    1 #>  [804,]    0 #>  [805,]    1 #>  [806,]    1 #>  [807,]    1 #>  [808,]    1 #>  [809,]    1 #>  [810,]    1 #>  [811,]    1 #>  [812,]    1 #>  [813,]    1 #>  [814,]    1 #>  [815,]    0 #>  [816,]    1 #>  [817,]    1 #>  [818,]    1 #>  [819,]    1 #>  [820,]    1 #>  [821,]    0 #>  [822,]    0 #>  [823,]    1 #>  [824,]    1 #>  [825,]    1 #>  [826,]    1 #>  [827,]    1 #>  [828,]    1 #>  [829,]    0 #>  [830,]    1 #>  [831,]    0 #>  [832,]    1 #>  [833,]    0 #>  [834,]    1 #>  [835,]    0 #>  [836,]    0 #>  [837,]    1 #>  [838,]    0 #>  [839,]    1 #>  [840,]    1 #>  [841,]    0 #>  [842,]    1 #>  [843,]    1 #>  [844,]    0 #>  [845,]    1 #>  [846,]    0 #>  [847,]    1 #>  [848,]    0 #>  [849,]    1 #>  [850,]    0 #>  [851,]    1 #>  [852,]    1 #>  [853,]    1 #>  [854,]    1 #>  [855,]    0 #>  [856,]    0 #>  [857,]    1 #>  [858,]    1 #>  [859,]    1 #>  [860,]    1 #>  [861,]    1 #>  [862,]    0 #>  [863,]    0 #>  [864,]    1 #>  [865,]    0 #>  [866,]    1 #>  [867,]    0 #>  [868,]    0 #>  [869,]    0 #>  [870,]    0 #>  [871,]    0 #>  [872,]    1 #>  [873,]    0 #>  [874,]    1 #>  [875,]    1 #>  [876,]    1 #>  [877,]    1 #>  [878,]    1 #>  [879,]    1 #>  [880,]    1 #>  [881,]    1 #>  [882,]    1 #>  [883,]    0 #>  [884,]    1 #>  [885,]    0 #>  [886,]    1 #>  [887,]    1 #>  [888,]    1 #>  [889,]    1 #>  [890,]    1 #>  [891,]    1 #>  [892,]    1 #>  [893,]    0 #>  [894,]    0 #>  [895,]    1 #>  [896,]    0 #>  [897,]    1 #>  [898,]    1 #>  [899,]    1 #>  [900,]    1 #>  [901,]    1 #>  [902,]    1 #>  [903,]    1 #>  [904,]    1 #>  [905,]    1 #>  [906,]    1 #>  [907,]    1 #>  [908,]    1 #>  [909,]    1 #>  [910,]    1 #>  [911,]    1 #>  [912,]    1 #>  [913,]    1 #>  [914,]    0 #>  [915,]    0 #>  [916,]    1 #>  [917,]    1 #>  [918,]    1 #>  [919,]    1 #>  [920,]    0 #>  [921,]    1 #>  [922,]    0 #>  [923,]    1 #>  [924,]    0 #>  [925,]    1 #>  [926,]    0 #>  [927,]    1 #>  [928,]    1 #>  [929,]    1 #>  [930,]    1 #>  [931,]    0 #>  [932,]    1 #>  [933,]    1 #>  [934,]    1 #>  [935,]    1 #>  [936,]    0 #>  [937,]    1 #>  [938,]    1 #>  [939,]    1 #>  [940,]    1 #>  [941,]    0 #>  [942,]    1 #>  [943,]    1 #>  [944,]    1 #>  [945,]    1 #>  [946,]    1 #>  [947,]    1 #>  [948,]    1 #>  [949,]    1 #>  [950,]    0 #>  [951,]    0 #>  [952,]    1 #>  [953,]    0 #>  [954,]    1 #>  [955,]    0 #>  [956,]    1 #>  [957,]    0 #>  [958,]    1 #>  [959,]    1 #>  [960,]    1 #>  [961,]    1 #>  [962,]    1 #>  [963,]    0 #>  [964,]    0 #>  [965,]    1 #>  [966,]    0 #>  [967,]    1 #>  [968,]    0 #>  [969,]    1 #>  [970,]    0 #>  [971,]    1 #>  [972,]    0 #>  [973,]    1 #>  [974,]    1 #>  [975,]    1 #>  [976,]    1 #>  [977,]    0 #>  [978,]    1 #>  [979,]    1 #>  [980,]    0 #>  [981,]    1 #>  [982,]    0 #>  [983,]    1 #>  [984,]    1 #>  [985,]    1 #>  [986,]    1 #>  [987,]    1 #>  [988,]    0 #>  [989,]    1 #>  [990,]    0 #>  [991,]    1 #>  [992,]    1 #>  [993,]    1 #>  [994,]    1 #>  [995,]    1 #>  [996,]    1 #>  [997,]    1 #>  [998,]    1 #>  [999,]    1 #> [1000,]    1 #>  [ reached getOption(\"max.print\") -- omitted 1000 rows ] #>  #> $A #>         [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] #>         [,14] [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23] [,24] [,25] #>         [,26] [,27] [,28] [,29] [,30] [,31] [,32] [,33] [,34] [,35] [,36] [,37] #>         [,38] [,39] [,40] [,41] [,42] [,43] [,44] [,45] [,46] [,47] [,48] [,49] #>         [,50] [,51] [,52] [,53] [,54] [,55] [,56] [,57] [,58] [,59] [,60] [,61] #>         [,62] [,63] [,64] [,65] [,66] [,67] [,68] [,69] [,70] [,71] [,72] [,73] #>         [,74] [,75] [,76] [,77] [,78] [,79] [,80] [,81] [,82] [,83] [,84] [,85] #>         [,86] [,87] [,88] [,89] [,90] [,91] [,92] [,93] [,94] [,95] [,96] [,97] #>         [,98] [,99] [,100] [,101] [,102] [,103] [,104] [,105] [,106] [,107] #>         [,108] [,109] [,110] [,111] [,112] [,113] [,114] [,115] [,116] [,117] #>         [,118] [,119] [,120] [,121] [,122] [,123] [,124] [,125] [,126] [,127] #>         [,128] [,129] [,130] [,131] [,132] [,133] [,134] [,135] [,136] [,137] #>         [,138] [,139] [,140] [,141] [,142] [,143] [,144] [,145] [,146] [,147] #>         [,148] [,149] [,150] [,151] [,152] [,153] [,154] [,155] [,156] [,157] #>         [,158] [,159] [,160] [,161] [,162] [,163] [,164] [,165] [,166] [,167] #>         [,168] [,169] [,170] [,171] [,172] [,173] [,174] [,175] [,176] [,177] #>         [,178] [,179] [,180] [,181] [,182] [,183] [,184] [,185] [,186] [,187] #>         [,188] [,189] [,190] [,191] [,192] [,193] [,194] [,195] [,196] [,197] #>         [,198] [,199] [,200] [,201] [,202] [,203] [,204] [,205] [,206] [,207] #>         [,208] [,209] [,210] [,211] [,212] [,213] [,214] [,215] [,216] [,217] #>         [,218] [,219] [,220] [,221] [,222] [,223] [,224] [,225] [,226] [,227] #>         [,228] [,229] [,230] [,231] [,232] [,233] [,234] [,235] [,236] [,237] #>         [,238] [,239] [,240] [,241] [,242] [,243] [,244] [,245] [,246] [,247] #>         [,248] [,249] [,250] [,251] [,252] [,253] [,254] [,255] [,256] [,257] #>         [,258] [,259] [,260] [,261] [,262] [,263] [,264] [,265] [,266] [,267] #>         [,268] [,269] [,270] [,271] [,272] [,273] [,274] [,275] [,276] [,277] #>         [,278] [,279] [,280] [,281] [,282] [,283] [,284] [,285] [,286] [,287] #>         [,288] [,289] [,290] [,291] [,292] [,293] [,294] [,295] [,296] [,297] #>         [,298] [,299] [,300] [,301] [,302] [,303] [,304] [,305] [,306] [,307] #>         [,308] [,309] [,310] [,311] [,312] [,313] [,314] [,315] [,316] [,317] #>         [,318] [,319] [,320] [,321] [,322] [,323] [,324] [,325] [,326] [,327] #>         [,328] [,329] [,330] [,331] [,332] [,333] [,334] [,335] [,336] [,337] #>         [,338] [,339] [,340] [,341] [,342] [,343] [,344] [,345] [,346] [,347] #>         [,348] [,349] [,350] [,351] [,352] [,353] [,354] [,355] [,356] [,357] #>         [,358] [,359] [,360] [,361] [,362] [,363] [,364] [,365] [,366] [,367] #>         [,368] [,369] [,370] [,371] [,372] [,373] [,374] [,375] [,376] [,377] #>         [,378] [,379] [,380] [,381] [,382] [,383] [,384] [,385] [,386] [,387] #>         [,388] [,389] [,390] [,391] [,392] [,393] [,394] [,395] [,396] [,397] #>         [,398] [,399] [,400] [,401] [,402] [,403] [,404] [,405] [,406] [,407] #>         [,408] [,409] [,410] [,411] [,412] [,413] [,414] [,415] [,416] [,417] #>         [,418] [,419] [,420] [,421] [,422] [,423] [,424] [,425] [,426] [,427] #>         [,428] [,429] [,430] [,431] [,432] [,433] [,434] [,435] [,436] [,437] #>         [,438] [,439] [,440] [,441] [,442] [,443] [,444] [,445] [,446] [,447] #>         [,448] [,449] [,450] [,451] [,452] [,453] [,454] [,455] [,456] [,457] #>         [,458] [,459] [,460] [,461] [,462] [,463] [,464] [,465] [,466] [,467] #>         [,468] [,469] [,470] [,471] [,472] [,473] [,474] [,475] [,476] [,477] #>         [,478] [,479] [,480] [,481] [,482] [,483] [,484] [,485] [,486] [,487] #>         [,488] [,489] [,490] [,491] [,492] [,493] [,494] [,495] [,496] [,497] #>         [,498] [,499] [,500] [,501] [,502] [,503] [,504] [,505] [,506] [,507] #>         [,508] [,509] [,510] [,511] [,512] [,513] [,514] [,515] [,516] [,517] #>         [,518] [,519] [,520] [,521] [,522] [,523] [,524] [,525] [,526] [,527] #>         [,528] [,529] [,530] [,531] [,532] [,533] [,534] [,535] [,536] [,537] #>         [,538] [,539] [,540] [,541] [,542] [,543] [,544] [,545] [,546] [,547] #>         [,548] [,549] [,550] [,551] [,552] [,553] [,554] [,555] [,556] [,557] #>         [,558] [,559] [,560] [,561] [,562] [,563] [,564] [,565] [,566] [,567] #>         [,568] [,569] [,570] [,571] [,572] [,573] [,574] [,575] [,576] [,577] #>         [,578] [,579] [,580] [,581] [,582] [,583] [,584] [,585] [,586] [,587] #>         [,588] [,589] [,590] [,591] [,592] [,593] [,594] [,595] [,596] [,597] #>         [,598] [,599] [,600] [,601] [,602] [,603] [,604] [,605] [,606] [,607] #>         [,608] [,609] [,610] [,611] [,612] [,613] [,614] [,615] [,616] [,617] #>         [,618] [,619] [,620] [,621] [,622] [,623] [,624] [,625] [,626] [,627] #>         [,628] [,629] [,630] [,631] [,632] [,633] [,634] [,635] [,636] [,637] #>         [,638] [,639] [,640] [,641] [,642] [,643] [,644] [,645] [,646] [,647] #>         [,648] [,649] [,650] [,651] [,652] [,653] [,654] [,655] [,656] [,657] #>         [,658] [,659] [,660] [,661] [,662] [,663] [,664] [,665] [,666] [,667] #>         [,668] [,669] [,670] [,671] [,672] [,673] [,674] [,675] [,676] [,677] #>         [,678] [,679] [,680] [,681] [,682] [,683] [,684] [,685] [,686] [,687] #>         [,688] [,689] [,690] [,691] [,692] [,693] [,694] [,695] [,696] [,697] #>         [,698] [,699] [,700] [,701] [,702] [,703] [,704] [,705] [,706] [,707] #>         [,708] [,709] [,710] [,711] [,712] [,713] [,714] [,715] [,716] [,717] #>         [,718] [,719] [,720] [,721] [,722] [,723] [,724] [,725] [,726] [,727] #>         [,728] [,729] [,730] [,731] [,732] [,733] [,734] [,735] [,736] [,737] #>         [,738] [,739] [,740] [,741] [,742] [,743] [,744] [,745] [,746] [,747] #>         [,748] [,749] [,750] [,751] [,752] [,753] [,754] [,755] [,756] [,757] #>         [,758] [,759] [,760] [,761] [,762] [,763] [,764] [,765] [,766] [,767] #>         [,768] [,769] [,770] [,771] [,772] [,773] [,774] [,775] [,776] [,777] #>         [,778] [,779] [,780] [,781] [,782] [,783] [,784] [,785] [,786] [,787] #>         [,788] [,789] [,790] [,791] [,792] [,793] [,794] [,795] [,796] [,797] #>         [,798] [,799] [,800] [,801] [,802] [,803] [,804] [,805] [,806] [,807] #>         [,808] [,809] [,810] [,811] [,812] [,813] [,814] [,815] [,816] [,817] #>         [,818] [,819] [,820] [,821] [,822] [,823] [,824] [,825] [,826] [,827] #>         [,828] [,829] [,830] [,831] [,832] [,833] [,834] [,835] [,836] [,837] #>         [,838] [,839] [,840] [,841] [,842] [,843] [,844] [,845] [,846] [,847] #>         [,848] [,849] [,850] [,851] [,852] [,853] [,854] [,855] [,856] [,857] #>         [,858] [,859] [,860] [,861] [,862] [,863] [,864] [,865] [,866] [,867] #>         [,868] [,869] [,870] [,871] [,872] [,873] [,874] [,875] [,876] [,877] #>         [,878] [,879] [,880] [,881] [,882] [,883] [,884] [,885] [,886] [,887] #>         [,888] [,889] [,890] [,891] [,892] [,893] [,894] [,895] [,896] [,897] #>         [,898] [,899] [,900] [,901] [,902] [,903] [,904] [,905] [,906] [,907] #>         [,908] [,909] [,910] [,911] [,912] [,913] [,914] [,915] [,916] [,917] #>         [,918] [,919] [,920] [,921] [,922] [,923] [,924] [,925] [,926] [,927] #>         [,928] [,929] [,930] [,931] [,932] [,933] [,934] [,935] [,936] [,937] #>         [,938] [,939] [,940] [,941] [,942] [,943] [,944] [,945] [,946] [,947] #>         [,948] [,949] [,950] [,951] [,952] [,953] [,954] [,955] [,956] [,957] #>         [,958] [,959] [,960] [,961] [,962] [,963] [,964] [,965] [,966] [,967] #>         [,968] [,969] [,970] [,971] [,972] [,973] [,974] [,975] [,976] [,977] #>         [,978] [,979] [,980] [,981] [,982] [,983] [,984] [,985] [,986] [,987] #>         [,988] [,989] [,990] [,991] [,992] [,993] [,994] [,995] [,996] [,997] #>         [,998] [,999] [,1000] [,1001] [,1002] [,1003] [,1004] [,1005] [,1006] #>         [,1007] [,1008] [,1009] [,1010] [,1011] [,1012] [,1013] [,1014] [,1015] #>         [,1016] [,1017] [,1018] [,1019] [,1020] [,1021] [,1022] [,1023] [,1024] #>         [,1025] [,1026] [,1027] [,1028] [,1029] [,1030] [,1031] [,1032] [,1033] #>         [,1034] [,1035] [,1036] [,1037] [,1038] [,1039] [,1040] [,1041] [,1042] #>         [,1043] [,1044] [,1045] [,1046] [,1047] [,1048] [,1049] [,1050] [,1051] #>         [,1052] [,1053] [,1054] [,1055] [,1056] [,1057] [,1058] [,1059] [,1060] #>         [,1061] [,1062] [,1063] [,1064] [,1065] [,1066] [,1067] [,1068] [,1069] #>         [,1070] [,1071] [,1072] [,1073] [,1074] [,1075] [,1076] [,1077] [,1078] #>         [,1079] [,1080] [,1081] [,1082] [,1083] [,1084] [,1085] [,1086] [,1087] #>         [,1088] [,1089] [,1090] [,1091] [,1092] [,1093] [,1094] [,1095] [,1096] #>         [,1097] [,1098] [,1099] [,1100] [,1101] [,1102] [,1103] [,1104] [,1105] #>         [,1106] [,1107] [,1108] [,1109] [,1110] [,1111] [,1112] [,1113] [,1114] #>         [,1115] [,1116] [,1117] [,1118] [,1119] [,1120] [,1121] [,1122] [,1123] #>         [,1124] [,1125] [,1126] [,1127] [,1128] [,1129] [,1130] [,1131] [,1132] #>         [,1133] [,1134] [,1135] [,1136] [,1137] [,1138] [,1139] [,1140] [,1141] #>         [,1142] [,1143] [,1144] [,1145] [,1146] [,1147] [,1148] [,1149] [,1150] #>         [,1151] [,1152] [,1153] [,1154] [,1155] [,1156] [,1157] [,1158] [,1159] #>         [,1160] [,1161] [,1162] [,1163] [,1164] [,1165] [,1166] [,1167] [,1168] #>         [,1169] [,1170] [,1171] [,1172] [,1173] [,1174] [,1175] [,1176] [,1177] #>         [,1178] [,1179] [,1180] [,1181] [,1182] [,1183] [,1184] [,1185] [,1186] #>         [,1187] [,1188] [,1189] [,1190] [,1191] [,1192] [,1193] [,1194] [,1195] #>         [,1196] [,1197] [,1198] [,1199] [,1200] [,1201] [,1202] [,1203] [,1204] #>         [,1205] [,1206] [,1207] [,1208] [,1209] [,1210] [,1211] [,1212] [,1213] #>         [,1214] [,1215] [,1216] [,1217] [,1218] [,1219] [,1220] [,1221] [,1222] #>         [,1223] [,1224] [,1225] [,1226] [,1227] [,1228] [,1229] [,1230] [,1231] #>         [,1232] [,1233] [,1234] [,1235] [,1236] [,1237] [,1238] [,1239] [,1240] #>         [,1241] [,1242] [,1243] [,1244] [,1245] [,1246] [,1247] [,1248] [,1249] #>         [,1250] [,1251] [,1252] [,1253] [,1254] [,1255] [,1256] [,1257] [,1258] #>         [,1259] [,1260] [,1261] [,1262] [,1263] [,1264] [,1265] [,1266] [,1267] #>         [,1268] [,1269] [,1270] [,1271] [,1272] [,1273] [,1274] [,1275] [,1276] #>         [,1277] [,1278] [,1279] [,1280] [,1281] [,1282] [,1283] [,1284] [,1285] #>         [,1286] [,1287] [,1288] [,1289] [,1290] [,1291] [,1292] [,1293] [,1294] #>         [,1295] [,1296] [,1297] [,1298] [,1299] [,1300] [,1301] [,1302] [,1303] #>         [,1304] [,1305] [,1306] [,1307] [,1308] [,1309] [,1310] [,1311] [,1312] #>         [,1313] [,1314] [,1315] [,1316] [,1317] [,1318] [,1319] [,1320] [,1321] #>         [,1322] [,1323] [,1324] [,1325] [,1326] [,1327] [,1328] [,1329] [,1330] #>         [,1331] [,1332] [,1333] [,1334] [,1335] [,1336] [,1337] [,1338] [,1339] #>         [,1340] [,1341] [,1342] [,1343] [,1344] [,1345] [,1346] [,1347] [,1348] #>         [,1349] [,1350] [,1351] [,1352] [,1353] [,1354] [,1355] [,1356] [,1357] #>         [,1358] [,1359] [,1360] [,1361] [,1362] [,1363] [,1364] [,1365] [,1366] #>         [,1367] [,1368] [,1369] [,1370] [,1371] [,1372] [,1373] [,1374] [,1375] #>         [,1376] [,1377] [,1378] [,1379] [,1380] [,1381] [,1382] [,1383] [,1384] #>         [,1385] [,1386] [,1387] [,1388] [,1389] [,1390] [,1391] [,1392] [,1393] #>         [,1394] [,1395] [,1396] [,1397] [,1398] [,1399] [,1400] [,1401] [,1402] #>         [,1403] [,1404] [,1405] [,1406] [,1407] [,1408] [,1409] [,1410] [,1411] #>         [,1412] [,1413] [,1414] [,1415] [,1416] [,1417] [,1418] [,1419] [,1420] #>         [,1421] [,1422] [,1423] [,1424] [,1425] [,1426] [,1427] [,1428] [,1429] #>         [,1430] [,1431] [,1432] [,1433] [,1434] [,1435] [,1436] [,1437] [,1438] #>         [,1439] [,1440] [,1441] [,1442] [,1443] [,1444] [,1445] [,1446] [,1447] #>         [,1448] [,1449] [,1450] [,1451] [,1452] [,1453] [,1454] [,1455] [,1456] #>         [,1457] [,1458] [,1459] [,1460] [,1461] [,1462] [,1463] [,1464] [,1465] #>         [,1466] [,1467] [,1468] [,1469] [,1470] [,1471] [,1472] [,1473] [,1474] #>         [,1475] [,1476] [,1477] [,1478] [,1479] [,1480] [,1481] [,1482] [,1483] #>         [,1484] [,1485] [,1486] [,1487] [,1488] [,1489] [,1490] [,1491] [,1492] #>         [,1493] [,1494] [,1495] [,1496] [,1497] [,1498] [,1499] [,1500] [,1501] #>         [,1502] [,1503] [,1504] [,1505] [,1506] [,1507] [,1508] [,1509] [,1510] #>         [,1511] [,1512] [,1513] [,1514] [,1515] [,1516] [,1517] [,1518] [,1519] #>         [,1520] [,1521] [,1522] [,1523] [,1524] [,1525] [,1526] [,1527] [,1528] #>         [,1529] [,1530] [,1531] [,1532] [,1533] [,1534] [,1535] [,1536] [,1537] #>         [,1538] [,1539] [,1540] [,1541] [,1542] [,1543] [,1544] [,1545] [,1546] #>         [,1547] [,1548] [,1549] [,1550] [,1551] [,1552] [,1553] [,1554] [,1555] #>         [,1556] [,1557] [,1558] [,1559] [,1560] [,1561] [,1562] [,1563] [,1564] #>         [,1565] [,1566] [,1567] [,1568] [,1569] [,1570] [,1571] [,1572] [,1573] #>         [,1574] [,1575] [,1576] [,1577] [,1578] [,1579] [,1580] [,1581] [,1582] #>         [,1583] [,1584] [,1585] [,1586] [,1587] [,1588] [,1589] [,1590] [,1591] #>         [,1592] [,1593] [,1594] [,1595] [,1596] [,1597] [,1598] [,1599] [,1600] #>         [,1601] [,1602] [,1603] [,1604] [,1605] [,1606] [,1607] [,1608] [,1609] #>         [,1610] [,1611] [,1612] [,1613] [,1614] [,1615] [,1616] [,1617] [,1618] #>         [,1619] [,1620] [,1621] [,1622] [,1623] [,1624] [,1625] [,1626] [,1627] #>         [,1628] [,1629] [,1630] [,1631] [,1632] [,1633] [,1634] [,1635] [,1636] #>         [,1637] [,1638] [,1639] [,1640] [,1641] [,1642] [,1643] [,1644] [,1645] #>         [,1646] [,1647] [,1648] [,1649] [,1650] [,1651] [,1652] [,1653] [,1654] #>         [,1655] [,1656] [,1657] [,1658] [,1659] [,1660] [,1661] [,1662] [,1663] #>         [,1664] [,1665] [,1666] [,1667] [,1668] [,1669] [,1670] [,1671] [,1672] #>         [,1673] [,1674] [,1675] [,1676] [,1677] [,1678] [,1679] [,1680] [,1681] #>         [,1682] [,1683] [,1684] [,1685] [,1686] [,1687] [,1688] [,1689] [,1690] #>         [,1691] [,1692] [,1693] [,1694] [,1695] [,1696] [,1697] [,1698] [,1699] #>         [,1700] [,1701] [,1702] [,1703] [,1704] [,1705] [,1706] [,1707] [,1708] #>         [,1709] [,1710] [,1711] [,1712] [,1713] [,1714] [,1715] [,1716] [,1717] #>         [,1718] [,1719] [,1720] [,1721] [,1722] [,1723] [,1724] [,1725] [,1726] #>         [,1727] [,1728] [,1729] [,1730] [,1731] [,1732] [,1733] [,1734] [,1735] #>         [,1736] [,1737] [,1738] [,1739] [,1740] [,1741] [,1742] [,1743] [,1744] #>         [,1745] [,1746] [,1747] [,1748] [,1749] [,1750] [,1751] [,1752] [,1753] #>         [,1754] [,1755] [,1756] [,1757] [,1758] [,1759] [,1760] [,1761] [,1762] #>         [,1763] [,1764] [,1765] [,1766] [,1767] [,1768] [,1769] [,1770] [,1771] #>         [,1772] [,1773] [,1774] [,1775] [,1776] [,1777] [,1778] [,1779] [,1780] #>         [,1781] [,1782] [,1783] [,1784] [,1785] [,1786] [,1787] [,1788] [,1789] #>         [,1790] [,1791] [,1792] [,1793] [,1794] [,1795] [,1796] [,1797] [,1798] #>         [,1799] [,1800] [,1801] [,1802] [,1803] [,1804] [,1805] [,1806] [,1807] #>         [,1808] [,1809] [,1810] [,1811] [,1812] [,1813] [,1814] [,1815] [,1816] #>         [,1817] [,1818] [,1819] [,1820] [,1821] [,1822] [,1823] [,1824] [,1825] #>         [,1826] [,1827] [,1828] [,1829] [,1830] [,1831] [,1832] [,1833] [,1834] #>         [,1835] [,1836] [,1837] [,1838] [,1839] [,1840] [,1841] [,1842] [,1843] #>         [,1844] [,1845] [,1846] [,1847] [,1848] [,1849] [,1850] [,1851] [,1852] #>         [,1853] [,1854] [,1855] [,1856] [,1857] [,1858] [,1859] [,1860] [,1861] #>         [,1862] [,1863] [,1864] [,1865] [,1866] [,1867] [,1868] [,1869] [,1870] #>         [,1871] [,1872] [,1873] [,1874] [,1875] [,1876] [,1877] [,1878] [,1879] #>         [,1880] [,1881] [,1882] [,1883] [,1884] [,1885] [,1886] [,1887] [,1888] #>         [,1889] [,1890] [,1891] [,1892] [,1893] [,1894] [,1895] [,1896] [,1897] #>         [,1898] [,1899] [,1900] [,1901] [,1902] [,1903] [,1904] [,1905] [,1906] #>         [,1907] [,1908] [,1909] [,1910] [,1911] [,1912] [,1913] [,1914] [,1915] #>         [,1916] [,1917] [,1918] [,1919] [,1920] [,1921] [,1922] [,1923] [,1924] #>         [,1925] [,1926] [,1927] [,1928] [,1929] [,1930] [,1931] [,1932] [,1933] #>         [,1934] [,1935] [,1936] [,1937] [,1938] [,1939] [,1940] [,1941] [,1942] #>         [,1943] [,1944] [,1945] [,1946] [,1947] [,1948] [,1949] [,1950] [,1951] #>         [,1952] [,1953] [,1954] [,1955] [,1956] [,1957] [,1958] [,1959] [,1960] #>         [,1961] [,1962] [,1963] [,1964] [,1965] [,1966] [,1967] [,1968] [,1969] #>         [,1970] [,1971] [,1972] [,1973] [,1974] [,1975] [,1976] [,1977] [,1978] #>         [,1979] [,1980] [,1981] [,1982] [,1983] [,1984] [,1985] [,1986] [,1987] #>         [,1988] [,1989] [,1990] [,1991] [,1992] [,1993] [,1994] [,1995] [,1996] #>         [,1997] [,1998] [,1999] [,2000] #>  [ reached getOption(\"max.print\") -- omitted 2000 rows ] #>"},{"path":"https://tkhdyanagi.github.io/latenetwork/reference/direct.html","id":null,"dir":"Reference","previous_headings":"","what":"Inference on Average Direct Effect Parameters — direct","title":"Inference on Average Direct Effect Parameters — direct","text":"Inference average direct effect IV outcome, treatment receipt, local average direct effect presence network spillover unknown form","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/reference/direct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inference on Average Direct Effect Parameters — direct","text":"","code":"direct(   Y,   D,   Z,   IEM = NULL,   S,   A,   K = 1,   t = NULL,   bw = NULL,   B = NULL,   alp = 0.05 )"},{"path":"https://tkhdyanagi.github.io/latenetwork/reference/direct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inference on Average Direct Effect Parameters — direct","text":"Y n-dimensional outcome vector D n-dimensional binary treatment vector Z n-dimensional binary instrumental vector IEM n-dimensional instrumental exposure vector. IEM = NULL t = NULL, constant IEM used. Default NULL. S n-dimensional logical vector indicate whether unit belongs sub-population S n times n symmetric binary adjacency matrix K scalar indicate range neighborhood used constructing interference set. Default 1. direct() function, K used computing bandwidth. t scalar evaluation point IEM. Default NULL. bw scalar bandwidth used HAC estimation wild bootstrap. bw = NULL, rule--thumb bandwidth proposed Leung (2022) used. Default NULL. B number bootstrap repetitions. B = NULL, wild bootstrap skipped. Default NULL. alp significance level. Default 0.05.","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/reference/direct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inference on Average Direct Effect Parameters — direct","text":"data.frame containing following elements: est parameter estimate HAC_SE standard error computed network HAC estimation HAC_CI_L lower bound confidence interval computed network HAC estimation HAC_CI_U upper bound confidence interval computed network HAC estimation wild_SE standard error computed wild bootstrap wild_CI_L lower bound confidence interval computed wild bootstrap wild_CI_U upper bound confidence interval computed wild bootstrap bw bandwidth used HAC estimation wild bootstrap size size subpopulation S","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/reference/direct.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Inference on Average Direct Effect Parameters — direct","text":"direct() function estimates average direct effect IV outcome, treatment receipt, local average direct effect via inverse probability weighting approximate neighborhood interference framework. function also computes standard errors confidence intervals target parameters based network HAC estimation wild bootstrap. details, see Hoshino Yanagi (2023). lengths Y, D, Z, S row column must . IEM must NULL vector length Y. t must NULL value support IEM. K must positive integer. bw must NULL non-negative integer. B must NULL positive number. alp must positive number 0 0.5.","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/reference/direct.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Inference on Average Direct Effect Parameters — direct","text":"Hoshino, T., & Yanagi, T. (2023). Causal inference noncompliance unknown interference. arXiv preprint arXiv:2108.07455. Leung, M.P. (2022). Causal inference approximate neighborhood interference. Econometrica, 90(1), pp.267-293.","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/reference/direct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inference on Average Direct Effect Parameters — direct","text":"","code":"# Generate artificial data set.seed(1) n <- 2000 data <- latenetwork::datageneration(n = n)  # Arguments Y   <- data$Y D   <- data$D Z   <- data$Z IEM <- data$IEM S   <- rep(TRUE, n) A   <- data$A K   <- 1 t   <- 0 bw  <- NULL B   <- NULL alp <- 0.05  # Estimation latenetwork::direct(Y = Y,                     D = D,                     Z = Z,                     IEM = IEM,                     S = S,                     A = A,                     K = K,                     t = t,                     bw = bw,                     B = B,                     alp = alp) #>            est     HAC_SE  HAC_CI_L  HAC_CI_U wild_SE wild_CI_L wild_CI_U bw #> ADEY 0.4008916 0.09871458 0.2074146 0.5943686      NA        NA        NA  8 #> ADED 0.2499606 0.03485485 0.1816464 0.3182749      NA        NA        NA  8 #> LADE 1.6038190 0.36023112 0.8977789 2.3098590      NA        NA        NA  8 #>      size #> ADEY 2000 #> ADED 2000 #> LADE 2000"},{"path":"https://tkhdyanagi.github.io/latenetwork/reference/indirect.html","id":null,"dir":"Reference","previous_headings":"","what":"Inference on Average Indirect Effect Parameters — indirect","title":"Inference on Average Indirect Effect Parameters — indirect","text":"Inference average indirect effect IV outcome, treatment receipt, local average indirect effect presence network spillover unknown form","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/reference/indirect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inference on Average Indirect Effect Parameters — indirect","text":"","code":"indirect(Y, D, Z, S, A, K = 1, bw = NULL, B = NULL, alp = 0.05)"},{"path":"https://tkhdyanagi.github.io/latenetwork/reference/indirect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inference on Average Indirect Effect Parameters — indirect","text":"Y n-dimensional outcome vector D n-dimensional binary treatment vector Z n-dimensional binary instrumental vector S n-dimensional logical vector indicate whether unit belongs sub-population S n times n symmetric binary adjacency matrix K scalar indicate range neighborhood used constructing interference set. Default 1. bw scalar bandwidth used HAC estimation wild bootstrap. bw = NULL, rule--thumb bandwidth proposed Leung (2022) used. Default NULL. B number bootstrap repetitions. B = NULL, wild bootstrap skipped. Default NULL. alp significance level. Default 0.05.","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/reference/indirect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inference on Average Indirect Effect Parameters — indirect","text":"data.frame containing following elements: est parameter estimate HAC_SE standard error computed network HAC estimation HAC_CI_L lower bound confidence interval computed network HAC estimation HAC_CI_U upper bound confidence interval computed network HAC estimation wild_SE standard error computed wild bootstrap wild_CI_L lower bound confidence interval computed wild bootstrap wild_CI_U upper bound confidence interval computed wild bootstrap bw bandwidth used HAC estimation wild bootstrap size size subpopulation S","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/reference/indirect.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Inference on Average Indirect Effect Parameters — indirect","text":"indirect() function estimates average indirect effect IV outcome, treatment receipt, local average indirect effect via inverse probability weighting approximate neighborhood interference framework. function also computes standard errors confidence intervals target parameters based network HAC estimation wild bootstrap. details, see Hoshino Yanagi (2023). lengths Y, D, Z, S row column must . K must positive integer. bw must NULL non-negative number. B must NULL positive number. alp must positive number 0 0.5.","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/reference/indirect.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Inference on Average Indirect Effect Parameters — indirect","text":"Hoshino, T., & Yanagi, T. (2023). Causal inference noncompliance unknown interference. arXiv preprint arXiv:2108.07455. Leung, M.P. (2022). Causal inference approximate neighborhood interference. Econometrica, 90(1), pp.267-293.","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/reference/indirect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inference on Average Indirect Effect Parameters — indirect","text":"","code":"# Generate artificial data set.seed(1) n <- 2000 data <- latenetwork::datageneration(n = n)  # Arguments Y   <- data$Y D   <- data$D Z   <- data$Z S   <- rep(TRUE, n) A   <- data$A K   <- 1 bw  <- NULL B   <- NULL alp <- 0.05  # Estimation latenetwork::indirect(Y = Y,                       D = D,                       Z = Z,                       S = S,                       A = A,                       K = K,                       bw = bw,                       B = B,                       alp = alp) #>            est     HAC_SE  HAC_CI_L  HAC_CI_U wild_SE wild_CI_L wild_CI_U bw #> AIEY 0.2924892 0.08785062 0.1203051 0.4646732      NA        NA        NA  8 #> AIED 0.2897227 0.03205981 0.2268866 0.3525587      NA        NA        NA  8 #> ADED 0.3551812 0.02213500 0.3117974 0.3985650      NA        NA        NA  8 #> LAIE 0.8234928 0.25796895 0.3178830 1.3291027      NA        NA        NA  8 #>      size #> AIEY 2000 #> AIED 2000 #> ADED 2000 #> LAIE 2000"},{"path":"https://tkhdyanagi.github.io/latenetwork/reference/overall.html","id":null,"dir":"Reference","previous_headings":"","what":"Inference on Average Overall Effect Parameters — overall","title":"Inference on Average Overall Effect Parameters — overall","text":"Inference average overall effect IV outcome, treatment receipt, local average overall effect presence network spillover unknown form","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/reference/overall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inference on Average Overall Effect Parameters — overall","text":"","code":"overall(Y, D, Z, S, A, K = 1, bw = NULL, B = NULL, alp = 0.05)"},{"path":"https://tkhdyanagi.github.io/latenetwork/reference/overall.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inference on Average Overall Effect Parameters — overall","text":"Y n-dimensional outcome vector D n-dimensional binary treatment vector Z n-dimensional binary instrumental vector S n-dimensional logical vector indicate whether unit belongs sub-population S n times n symmetric binary adjacency matrix K scalar indicate range neighborhood used constructing interference set. Default 1. bw scalar bandwidth used HAC estimation wild bootstrap. bw = NULL, rule--thumb bandwidth proposed Leung (2022) used. Default NULL. B number bootstrap repetitions. B = NULL, wild bootstrap skipped. Default NULL. alp significance level. Default 0.05.","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/reference/overall.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inference on Average Overall Effect Parameters — overall","text":"data.frame containing following elements: est parameter estimate HAC_SE standard error computed network HAC estimation HAC_CI_L lower bound confidence interval computed network HAC estimation HAC_CI_U upper bound confidence interval computed network HAC estimation wild_SE standard error computed wild bootstrap wild_CI_L lower bound confidence interval computed wild bootstrap wild_CI_U upper bound confidence interval computed wild bootstrap bw bandwidth used HAC estimation wild bootstrap size size subpopulation S","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/reference/overall.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Inference on Average Overall Effect Parameters — overall","text":"overall() function estimates average overall effect IV outcome, treatment receipt, local average overall effect via inverse probability weighting approximate neighborhood interference framework. function also computes standard errors confidence intervals target parameters based network HAC estimation wild bootstrap. details, see Hoshino Yanagi (2023). lengths Y, D, Z, S row column must . K must positive integer. bw must NULL non-negative number. B must NULL positive number. alp must positive number 0 0.5.","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/reference/overall.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Inference on Average Overall Effect Parameters — overall","text":"Hoshino, T., & Yanagi, T. (2023). Causal inference noncompliance unknown interference. arXiv preprint arXiv:2108.07455. Leung, M.P. (2022). Causal inference approximate neighborhood interference. Econometrica, 90(1), pp.267-293.","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/reference/overall.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inference on Average Overall Effect Parameters — overall","text":"","code":"# Generate artificial data set.seed(1) n <- 2000 data <- latenetwork::datageneration(n = n)  # Arguments Y   <- data$Y D   <- data$D Z   <- data$Z S   <- rep(TRUE, n) A   <- data$A K   <- 1 bw  <- NULL B   <- NULL alp <- 0.05  # Estimation latenetwork::overall(Y = Y,                      D = D,                      Z = Z,                      S = S,                      A = A,                      K = K,                      bw = bw,                      B = B,                      alp = alp) #>            est     HAC_SE  HAC_CI_L  HAC_CI_U wild_SE wild_CI_L wild_CI_U bw #> AOEY 0.8557528 0.09429867 0.6709308 1.0405748      NA        NA        NA  8 #> AOED 0.6449039 0.03744014 0.5715226 0.7182852      NA        NA        NA  8 #> ADED 0.3551812 0.02213500 0.3117974 0.3985650      NA        NA        NA  8 #> LAOE 2.4093413 0.27637076 1.8676646 2.9510181      NA        NA        NA  8 #>      size #> AOEY 2000 #> AOED 2000 #> ADED 2000 #> LAOE 2000"},{"path":"https://tkhdyanagi.github.io/latenetwork/reference/spillover.html","id":null,"dir":"Reference","previous_headings":"","what":"Inference on Average Spillover Effect Parameters — spillover","title":"Inference on Average Spillover Effect Parameters — spillover","text":"Inference average spillover effect IV outcome, treatment receipt, local average spillover effect presence network spillover unknown form","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/reference/spillover.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inference on Average Spillover Effect Parameters — spillover","text":"","code":"spillover(   Y,   D,   Z,   IEM,   S,   A,   K = 1,   z,   t0,   t1,   bw = NULL,   B = NULL,   alp = 0.05 )"},{"path":"https://tkhdyanagi.github.io/latenetwork/reference/spillover.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inference on Average Spillover Effect Parameters — spillover","text":"Y n-dimensional outcome vector D n-dimensional binary treatment vector Z n-dimensional binary instrumental vector IEM n-dimensional instrumental exposure vector S n-dimensional logical vector indicate whether unit belongs sub-population S n times n symmetric binary adjacency matrix K scalar indicate range neighborhood used constructing interference set. Default 1. spillover() function, K used computing bandwidth. z scalar evaluation point Z t0 scalar evaluation point instrumental exposure () t1 scalar evaluation point instrumental exposure () bw scalar bandwidth used HAC estimation wild bootstrap. bw = NULL, rule--thumb bandwidth proposed Leung (2022) used. Default NULL. B number bootstrap repetitions. B = NULL, wild bootstrap skipped. Default NULL. alp significance level. Default 0.05.","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/reference/spillover.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inference on Average Spillover Effect Parameters — spillover","text":"data frame containing following elements: est parameter estimate HAC_SE standard error computed network HAC estimation HAC_CI_L lower bound confidence interval computed network HAC estimation HAC_CI_U upper bound confidence interval computed network HAC estimation wild_SE standard error computed wild bootstrap wild_CI_L lower bound confidence interval computed wild bootstrap wild_CI_U upper bound confidence interval computed wild bootstrap bw bandwidth used HAC estimation wild bootstrap size size subpopulation S","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/reference/spillover.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Inference on Average Spillover Effect Parameters — spillover","text":"spillover() function estimates average spillover effect IV outcome, treatment receipt, local average spillover effect via inverse probability weighting approximate neighborhood interference framework. function also computes standard errors confidence intervals target parameters based network HAC estimation wild bootstrap. details, see Hoshino Yanagi (2023). lengths Y, D, Z, IEM, S row column must . z must 0 1. t0 t1 must values support IEM. bw must NULL non-negative number. B must NULL positive integer. alp must positive number 0 0.5.","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/reference/spillover.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Inference on Average Spillover Effect Parameters — spillover","text":"Hoshino, T., & Yanagi, T. (2023). Causal inference noncompliance unknown interference. arXiv preprint arXiv:2108.07455. Leung, M.P. (2022). Causal inference approximate neighborhood interference. Econometrica, 90(1), pp.267-293.","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/reference/spillover.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inference on Average Spillover Effect Parameters — spillover","text":"","code":"# Generate artificial data set.seed(1) n <- 2000 data <- latenetwork::datageneration(n = n)  # Arguments Y   <- data$Y D   <- data$D Z   <- data$Z S   <- rep(TRUE, n) A   <- data$A K   <- 1 IEM <- ifelse(A %*% Z > 0, 1, 0) z   <- 1 t0  <- 0 t1  <- 1 bw  <- NULL B   <- NULL alp <- 0.05  # Estimation latenetwork::spillover(Y = Y,                        D = D,                        Z = Z,                        IEM = IEM,                        S = S,                        A = A,                        K = K,                        z = z,                        t0 = t0,                        t1 = t1,                        bw = bw,                        B = B,                        alp = alp) #>            est     HAC_SE  HAC_CI_L  HAC_CI_U wild_SE wild_CI_L wild_CI_U bw #> ASEY 0.5750447 0.08065202 0.4169696 0.7331197      NA        NA        NA  8 #> ASED 0.3920457 0.03401795 0.3253718 0.4587197      NA        NA        NA  8 #> LASE 1.4667795 0.18557907 1.1030512 1.8305078      NA        NA        NA  8 #>      size #> ASEY 2000 #> ASED 2000 #> LASE 2000"},{"path":"https://tkhdyanagi.github.io/latenetwork/news/index.html","id":"latenetwork-101","dir":"Changelog","previous_headings":"","what":"latenetwork 1.0.1","title":"latenetwork 1.0.1","text":"Second CRAN submission.","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/news/index.html","id":"latenetwork-100","dir":"Changelog","previous_headings":"","what":"latenetwork 1.0.0","title":"latenetwork 1.0.0","text":"First CRAN submission.","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/news/index.html","id":"latenetwork-012","dir":"Changelog","previous_headings":"","what":"latenetwork 0.1.2","title":"latenetwork 0.1.2","text":"Updated DESCRIPTION, README, vignettes.","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/news/index.html","id":"latenetwork-011","dir":"Changelog","previous_headings":"","what":"latenetwork 0.1.1","title":"latenetwork 0.1.1","text":"Added GitHub Pages.","code":""},{"path":"https://tkhdyanagi.github.io/latenetwork/news/index.html","id":"latenetwork-010","dir":"Changelog","previous_headings":"","what":"latenetwork 0.1.0","title":"latenetwork 0.1.0","text":"First version.","code":""}]
